openapi: 3.0.1
info:
  title: Bright Market API Docs
  description: Documentación de los servicios de Bright Market
servers:
  - url: /
    description: Test
tags:
  - name: Categorías
    description: Servicios referidos a las categorías
  - name: Depósito
    description: Servicios referidos a los depósitos
  - name: Promociones
    description: Servicios referidos a las promociones
  - name: Roles
    description: Servicios referidos a los roles
  - name: Tickets
    description: Servicios referidos a los tickets
  - name: Sucursales
    description: Servicios referidos a las sucursales
  - name: Atributos
    description: Servicios referidos a los atributos
  - name: Tipos de promoción
    description: Servicios referidos a los tipos de promoción
  - name: Marcas
    description: Servicios referidos a las marcas
  - name: Proveedores
    description: Servicios referidos a los proveedores
  - name: Métodos de pago de proveedores
    description: Servicios referidos a los métodos de pago de proveedores
  - name: Unidades de compra
    description: Servicios referidos a las unidades de compra
  - name: Chequeo de salud
    description: Servicios para chequear el servidor
  - name: Autorización
    description: Servicios para autenticación, registro de usuarios y organizaciones
  - name: Órdenes de compra
    description: Servicios referidos a las órdenes de compra
  - name: Pricings
    description: Servicios referidos a los pricings
  - name: Usuarios
    description: Servicios referidos a los usuarios
  - name: Órdenes de reposición
    description: Servicios referidos a las órdenes de reposición
  - name: Tipos de pricing
    description: Servicios referidos a los tipos de pricing
  - name: Organización
    description: Servicios referidos a las organizaciones
  - name: Métodos de pago aceptados
    description: Servicios referidos a los métodos de pago aceptados
  - name: Artículos
    description: Servicios referidos a los artículos
  - name: Competidores
    description: Servicios referidos a los competidores
  - name: Unidades de negocio
    description: Servicios referidos a las unidades de negocio
  - name: Clientes
    description: Servicios referidos a los clientes y segmentos de clientes
paths:
  /api/users/{id}:
    put:
      tags:
        - Usuarios
      summary: Editar usuario
      operationId: editUser
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: roleIds
          in: query
          required: true
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: businessUnitsIds
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: branchOfficesIds
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserProjectionResponse'
      security:
        - Bearer Authentication: []
  /api/tickets/{id}:
    get:
      tags:
        - Tickets
      summary: Obtener ticket
      operationId: getTicket
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TicketProjectionResponse'
      security:
        - Bearer Authentication: []
    put:
      tags:
        - Tickets
      summary: Editar ticket
      operationId: editTicket
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ticket'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TicketProjectionResponse'
      security:
        - Bearer Authentication: []
    delete:
      tags:
        - Tickets
      summary: Eliminar ticket
      operationId: deleteTicket
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TicketEntity'
      security:
        - Bearer Authentication: []
  /api/suppliers/{supplierId}:
    get:
      tags:
        - Proveedores
      summary: Obtener proveedor
      operationId: getSupplier
      parameters:
        - name: supplierId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SupplierResponse'
      security:
        - Bearer Authentication: []
    put:
      tags:
        - Proveedores
      summary: Editar proveedor
      operationId: editSupplier
      parameters:
        - name: supplierId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: externalId
          in: query
          required: false
          schema:
            type: string
        - name: name
          in: query
          required: true
          schema:
            type: string
        - name: website
          in: query
          required: false
          schema:
            type: string
        - name: catalogueLink
          in: query
          required: false
          schema:
            type: string
        - name: businessUnitsIds
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: supplierPaymentMethodIds
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SupplierResponse'
      security:
        - Bearer Authentication: []
    delete:
      tags:
        - Proveedores
      summary: Eliminar proveedor
      operationId: deleteSupplier
      parameters:
        - name: supplierId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SupplierEntity'
      security:
        - Bearer Authentication: []
  /api/suppliers/contacts/{supplierContactId}:
    put:
      tags:
        - Proveedores
      summary: Editar contacto de proveedor
      operationId: editContat
      parameters:
        - name: supplierContactId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: name
          in: query
          required: true
          schema:
            type: string
        - name: phoneNumber
          in: query
          required: false
          schema:
            type: string
        - name: email
          in: query
          required: false
          schema:
            type: string
        - name: role
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SupplierContactResponse'
      security:
        - Bearer Authentication: []
    delete:
      tags:
        - Proveedores
      summary: Eliminar contacto de proveedor
      operationId: deleteContact
      parameters:
        - name: supplierContactId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SupplierContactEntity'
      security:
        - Bearer Authentication: []
  /api/suppliers/articles/{articleSupplierId}:
    put:
      tags:
        - Proveedores
      summary: Editar artículo de proveedor
      operationId: editArticle
      parameters:
        - name: articleSupplierId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArticleSuppliers'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SupplierResponse'
      security:
        - Bearer Authentication: []
    delete:
      tags:
        - Proveedores
      summary: Eliminar artículo de proveedor
      operationId: deleteArticle
      parameters:
        - name: articleSupplierId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ArticleSuppliersEntity'
      security:
        - Bearer Authentication: []
  /api/supplierPaymentMethod/{id}:
    put:
      tags:
        - Métodos de pago de proveedores
      summary: Editar método de pago de proveedor
      operationId: editSupplierPaymentMethod
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SupplierPaymentMethod'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SupplierPaymentMethodProjectionResponse'
      security:
        - Bearer Authentication: []
    delete:
      tags:
        - Métodos de pago de proveedores
      summary: Eliminar método de pago de proveedor
      operationId: removeSupplierPaymentMethod
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OkResponse'
      security:
        - Bearer Authentication: []
  /api/roles/{id}:
    put:
      tags:
        - Roles
      summary: Editar rol
      operationId: modifyRole
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: name
          in: query
          required: true
          schema:
            type: string
        - name: privilegesId
          in: query
          required: true
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: description
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RoleResponse'
      security:
        - Bearer Authentication: []
    delete:
      tags:
        - Roles
      summary: Elimnar rol
      operationId: deleteRole
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RoleResponse'
      security:
        - Bearer Authentication: []
  /api/roles/assignToUser/{idUser}:
    put:
      tags:
        - Roles
      summary: Modificar roles de usuario
      operationId: assignRoles
      parameters:
        - name: idUser
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: roleIds
          in: query
          required: true
          schema:
            type: array
            items:
              type: integer
              format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListRoleResponse'
      security:
        - Bearer Authentication: []
  /api/repositionOrders/{id}:
    get:
      tags:
        - Órdenes de reposición
      summary: Crear órden de reposición
      operationId: getRepositionOrder
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RepositionOrderProjectionResponse'
      security:
        - Bearer Authentication: []
    put:
      tags:
        - Órdenes de reposición
      summary: Editar órden de reposición
      operationId: editRepositionOrder
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditRepositionOrder'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RepositionOrderProjectionResponse'
      security:
        - Bearer Authentication: []
  /api/repositionOrders/changeStatus/{id}:
    put:
      tags:
        - Órdenes de reposición
      summary: Cambiar estado de órden de reposición
      operationId: changeStatus
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: status
          in: query
          required: true
          schema:
            type: string
            enum:
              - SUGGESTED
              - GENERATED
              - SENT
              - IN_PROGRESS
              - PARTIAL
              - NOT_COMPLETED
              - COMPLETED
              - CANCEL
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RepositionOrderProjectionResponse'
      security:
        - Bearer Authentication: []
  /api/purchaseUnits/{id}:
    get:
      tags:
        - Unidades de compra
      summary: Obtener unidad de compra
      operationId: getArticle
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PurchaseUnitResponse'
      security:
        - Bearer Authentication: []
    put:
      tags:
        - Unidades de compra
      summary: Editar unidad de compra
      operationId: editPurchaseUnit
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseUnit'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PurchaseUnitResponse'
      security:
        - Bearer Authentication: []
    delete:
      tags:
        - Unidades de compra
      summary: Eliminar uniadd de compra
      operationId: deletePurchaseUnit
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OkResponse'
      security:
        - Bearer Authentication: []
  /api/purchaseOrders/{id}:
    get:
      tags:
        - Órdenes de compra
      summary: Obtener orden de compra
      operationId: getPurchaseOrder
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PurchaseOrderProjectionResponse'
      security:
        - Bearer Authentication: []
    put:
      tags:
        - Órdenes de compra
      summary: Editar orden de compra
      operationId: editPurchaseOrder
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditPurchaseOrder'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PurchaseOrderProjectionResponse'
      security:
        - Bearer Authentication: []
  /api/purchaseOrders/changeStatus/{id}:
    put:
      tags:
        - Órdenes de compra
      summary: Cambiar estado de orden de compra
      operationId: changeStatus_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: status
          in: query
          required: true
          schema:
            type: string
            enum:
              - SUGGESTED
              - GENERATED
              - SENT
              - IN_PROGRESS
              - PARTIAL
              - NOT_COMPLETED
              - COMPLETED
              - CANCEL
        - name: notCompletedReason
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PurchaseOrderProjectionResponse'
      security:
        - Bearer Authentication: []
  /api/promotions/regular/{id}:
    put:
      tags:
        - Promociones
      summary: Editar promoción regular
      operationId: editRegularPromotion
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegularPromotion'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PromotionProjectionResponse'
      security:
        - Bearer Authentication: []
  /api/promotions/progressiveDiscount/{id}:
    put:
      tags:
        - Promociones
      summary: Editar promoción 'Descuento progresivo'
      operationId: editProgressiveDiscountPromotion
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProgressiveDiscountPromotion'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PromotionProjectionResponse'
      security:
        - Bearer Authentication: []
  /api/promotions/mxn/{id}:
    put:
      tags:
        - Promociones
      summary: Editar promoción MxN
      operationId: editMxnPromotion
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MxnPromotion'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PromotionProjectionResponse'
      security:
        - Bearer Authentication: []
  /api/promotions/buyTogether/{id}:
    put:
      tags:
        - Promociones
      summary: Editar promoción 'Comprar juntos'
      operationId: editBuyTogetherPromotion
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuyTogetherPromotion'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PromotionProjectionResponse'
      security:
        - Bearer Authentication: []
  /api/promotions/buyOneGetOne/{id}:
    put:
      tags:
        - Promociones
      summary: Editar promoción 'Comprar uno, obtener uno'
      operationId: editBuyOneGetOnePromotion
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuyOneGetOnePromotion'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PromotionProjectionResponse'
      security:
        - Bearer Authentication: []
  /api/promotionTypes/{id}:
    put:
      tags:
        - Tipos de promoción
      summary: Editar tipo de promoción
      operationId: editPromotionType
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: name
          in: query
          required: false
          schema:
            type: string
        - name: code
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PromotionTypeProjectionResponse'
      security:
        - Bearer Authentication: []
    delete:
      tags:
        - Tipos de promoción
      summary: Eliminar tipo de promoción
      operationId: deletePromotionType
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OkResponse'
      security:
        - Bearer Authentication: []
  /api/pricings/{id}:
    get:
      tags:
        - Pricings
      summary: Obtener pricing
      operationId: getPricingById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PricingProjectionResponse'
      security:
        - Bearer Authentication: []
    put:
      tags:
        - Pricings
      summary: Editar pricing
      operationId: editPricing
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pricing'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PricingProjectionResponse'
      security:
        - Bearer Authentication: []
    delete:
      tags:
        - Pricings
      summary: Eliminar pricing
      operationId: deletePricing
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OkResponse'
      security:
        - Bearer Authentication: []
  /api/pricingTypes/{id}:
    put:
      tags:
        - Tipos de pricing
      summary: Editar tipo de pricing
      operationId: editPricingType
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: description
          in: query
          required: false
          schema:
            type: string
        - name: code
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PricingTypeProjectionResponse'
      security:
        - Bearer Authentication: []
    delete:
      tags:
        - Tipos de pricing
      summary: Eliminar tipo de pricing
      operationId: deletePricingType
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OkResponse'
      security:
        - Bearer Authentication: []
  /api/organizations/{id}:
    get:
      tags:
        - Organización
      summary: Obtener organización por id
      operationId: getOrganization
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OrganizationProjectionResponse'
      security:
        - Bearer Authentication: []
    put:
      tags:
        - Organización
      summary: Modificar organización
      operationId: modifyOrganization
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Organization'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OrganizationEntityResponse'
      security:
        - Bearer Authentication: []
  /api/deposits/{id}:
    get:
      tags:
        - Depósito
      summary: Obtener depósito
      operationId: getDeposit
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DepositProjectionResponse'
      security:
        - Bearer Authentication: []
    put:
      tags:
        - Depósito
      summary: Editar depósito
      operationId: editDeposit
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Deposit'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DepositProjectionResponse'
      security:
        - Bearer Authentication: []
    delete:
      tags:
        - Depósito
      summary: Eliminar depósito
      operationId: deleteDeposit
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OkResponse'
      security:
        - Bearer Authentication: []
  /api/deposits/editStocks:
    put:
      tags:
        - Depósito
      summary: Editar stocks de varios SKUs en varios depósito
      operationId: editStocksForMultipleSkuBranchOffices
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/StockUpdateRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListDepositProjectionResponse'
      security:
        - Bearer Authentication: []
  /api/deposits/editStock/{id}:
    put:
      tags:
        - Depósito
      summary: Editar stock de sku en depósito
      operationId: editStockFromSkuInDeposit
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: stock
          in: query
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SkuDepositProjectionResponse'
      security:
        - Bearer Authentication: []
  /api/competitors/{id}:
    get:
      tags:
        - Competidores
      summary: Obtener Competidor
      operationId: getArticle_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CompetitorProjectionResponse'
      security:
        - Bearer Authentication: []
    put:
      tags:
        - Competidores
      summary: Editar competidor
      operationId: editCompetitor
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: externalId
          in: query
          required: false
          schema:
            type: string
        - name: name
          in: query
          required: true
          schema:
            type: string
        - name: website
          in: query
          required: false
          schema:
            type: string
        - name: articlesIds
          in: query
          required: true
          schema:
            type: array
            items:
              type: integer
              format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CompetitorProjectionResponse'
      security:
        - Bearer Authentication: []
    delete:
      tags:
        - Competidores
      summary: Eliminar competidor
      operationId: deleteCompetitor
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OkResponse'
      security:
        - Bearer Authentication: []
  /api/clients/{id}:
    get:
      tags:
        - Clientes
      summary: Obtener cliente
      operationId: getClient
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ClientProjectionResponse'
      security:
        - Bearer Authentication: []
    put:
      tags:
        - Clientes
      summary: Editar cliente
      operationId: editCClient
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: name
          in: query
          required: true
          schema:
            type: string
        - name: lastname
          in: query
          required: false
          schema:
            type: string
        - name: birthdate
          in: query
          required: false
          schema:
            type: string
            format: date
        - name: telephone
          in: query
          required: false
          schema:
            type: string
        - name: cellphone
          in: query
          required: false
          schema:
            type: string
        - name: idTypeId
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: idNumber
          in: query
          required: false
          schema:
            type: string
        - name: countryId
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: stateId
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: locality
          in: query
          required: false
          schema:
            type: string
        - name: address
          in: query
          required: false
          schema:
            type: string
        - name: email
          in: query
          required: false
          schema:
            type: string
        - name: fidelity
          in: query
          required: false
          schema:
            type: string
        - name: sex
          in: query
          required: false
          schema:
            type: string
            enum:
              - MALE
              - FEMALE
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ClientProjectionResponse'
      security:
        - Bearer Authentication: []
    delete:
      tags:
        - Clientes
      summary: Eliminar cliente
      operationId: deleteClient
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OkResponse'
      security:
        - Bearer Authentication: []
  /api/clients/segments/{id}:
    get:
      tags:
        - Clientes
      summary: Obtener segmento de clientes
      operationId: getSegment
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ClientSegmentProjectionResponse'
      security:
        - Bearer Authentication: []
    put:
      tags:
        - Clientes
      summary: Editar segmento de cliente
      operationId: editClientSegment
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: name
          in: query
          required: true
          schema:
            type: string
        - name: description
          in: query
          required: true
          schema:
            type: string
        - name: minAge
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: maxAge
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: sex
          in: query
          required: false
          schema:
            type: string
            enum:
              - MALE
              - FEMALE
        - name: countryIds
          in: query
          required: true
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: stateIds
          in: query
          required: true
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: articlesIds
          in: query
          required: true
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: brandsIds
          in: query
          required: true
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: categoriesIds
          in: query
          required: true
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: branchOfficesIds
          in: query
          required: true
          schema:
            type: array
            items:
              type: integer
              format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ClientSegmentProjectionResponse'
      security:
        - Bearer Authentication: []
    delete:
      tags:
        - Clientes
      summary: Eliminar segmento de cliente
      operationId: deleteClientSegment
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OkResponse'
      security:
        - Bearer Authentication: []
  /api/categories/{id}:
    get:
      tags:
        - Categorías
      summary: Obtener  categoría
      operationId: getCategory
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CategoryResponse'
      security:
        - Bearer Authentication: []
    put:
      tags:
        - Categorías
      summary: Editar categoría
      operationId: editCategory
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: externalId
          in: query
          required: false
          schema:
            type: string
        - name: name
          in: query
          required: true
          schema:
            type: string
        - name: description
          in: query
          required: false
          schema:
            type: string
        - name: fatherId
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: enable
          in: query
          required: true
          schema:
            type: boolean
        - name: roundingTypeId
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: businessUnitsIds
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CategoryResponse'
      security:
        - Bearer Authentication: []
    delete:
      tags:
        - Categorías
      summary: Eliminar categoría
      operationId: deleteCategory
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CategoryEntity'
      security:
        - Bearer Authentication: []
  /api/businessUnits/{businessUnitId}:
    put:
      tags:
        - Unidades de negocio
      summary: Editar unidad de negocio
      operationId: editBusinessUnit
      parameters:
        - name: businessUnitId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: name
          in: query
          required: true
          schema:
            type: string
        - name: languageId
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: currencyId
          in: query
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BusinessUnitResponse'
      security:
        - Bearer Authentication: []
    delete:
      tags:
        - Unidades de negocio
      summary: Eliminar unidad de negocio
      operationId: deleteBusinessUnit
      parameters:
        - name: businessUnitId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BusinessUnitResponse'
      security:
        - Bearer Authentication: []
  /api/businessUnits/channel/{channelId}:
    put:
      tags:
        - Unidades de negocio
      summary: Editar canal
      operationId: editChannel
      parameters:
        - name: channelId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: channelTypeId
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - name: currenciesIds
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ChannelResponse'
      security:
        - Bearer Authentication: []
  /api/brands/{id}:
    get:
      tags:
        - Marcas
      summary: Obtener  marca
      operationId: getBrand
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BrandProjectionResponse'
      security:
        - Bearer Authentication: []
    put:
      tags:
        - Marcas
      summary: Editar marca
      operationId: editBrand
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: externalId
          in: query
          required: false
          schema:
            type: string
        - name: name
          in: query
          required: true
          schema:
            type: string
        - name: description
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BrandProjectionResponse'
      security:
        - Bearer Authentication: []
    delete:
      tags:
        - Marcas
      summary: Eliminar marca
      operationId: deleteBrand
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OkResponse'
      security:
        - Bearer Authentication: []
  /api/branchOffices/{id}:
    get:
      tags:
        - Sucursales
      summary: Obtener sucural
      operationId: getBranchOffice
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BranchOfficeResponse'
      security:
        - Bearer Authentication: []
    put:
      tags:
        - Sucursales
      summary: Editar sucural
      operationId: editBranchOffice
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BranchOffice'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BranchOfficeResponse'
      security:
        - Bearer Authentication: []
    delete:
      tags:
        - Sucursales
      summary: Eliminar sucural
      operationId: deleteBranchOffice
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BranchOfficeResponse'
      security:
        - Bearer Authentication: []
  /api/branchOffices/{branchOfficeId}/toggleUnsupply/{skuId}:
    put:
      tags:
        - Sucursales
      summary: Altenrar el estado de discontinuado de un sku en una sucursal
      operationId: toggleUnsuppliy
      parameters:
        - name: branchOfficeId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: skuId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BranchOfficeResponse'
      security:
        - Bearer Authentication: []
  /api/branchOffices/salePoint/{id}:
    put:
      tags:
        - Sucursales
      summary: Editar punto de venta
      operationId: editSalePoint
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SalePointToModify'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SalePointProjectionResponse'
      security:
        - Bearer Authentication: []
    delete:
      tags:
        - Sucursales
      summary: Eliminar punto de venta
      operationId: deleteSalePoint
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OkResponse'
      security:
        - Bearer Authentication: []
  /api/branchOffices/editStocks:
    put:
      tags:
        - Sucursales
      summary: Editar stocks de varios SKUs en varias sucursales
      operationId: editStocksForMultipleSkuBranchOffices_1
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/StockUpdateRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListSkuBranchOfficeProjectionResponse'
      security:
        - Bearer Authentication: []
  /api/branchOffices/editStock/{id}:
    put:
      tags:
        - Sucursales
      summary: Editar stock de un SKU en una sucursal
      operationId: editStockFromSkuInBranchOffice
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: stock
          in: query
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SkuBranchOfficeProjectionResponse'
      security:
        - Bearer Authentication: []
  /api/attributes/{attributeId}:
    put:
      tags:
        - Atributos
      summary: Editar atributo
      operationId: editAttribute
      parameters:
        - name: attributeId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: attribute
          in: query
          required: true
          schema:
            type: string
        - name: businessUnitsIds
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: isEnum
          in: query
          required: true
          schema:
            type: boolean
        - name: enums
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AttributeResponse'
      security:
        - Bearer Authentication: []
    delete:
      tags:
        - Atributos
      summary: Eliminar atributo
      operationId: deleteAttribute
      parameters:
        - name: attributeId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AttributeEntity'
      security:
        - Bearer Authentication: []
  /api/articles/{id}:
    get:
      tags:
        - Artículos
      summary: Obtener artículo
      operationId: getArticle_2
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ArticleResponse'
      security:
        - Bearer Authentication: []
    put:
      tags:
        - Artículos
      summary: Editar artículo
      operationId: editArticle_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: name
          in: query
          required: true
          schema:
            type: string
        - name: externalId
          in: query
          required: false
          schema:
            type: string
        - name: description
          in: query
          required: false
          schema:
            type: string
        - name: categoryId
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: brandId
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: cost
          in: query
          required: false
          schema:
            type: number
            format: double
        - name: defaultPrice
          in: query
          required: false
          schema:
            type: number
            format: double
        - name: currencyId
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: roundingTypeId
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: enable
          in: query
          required: true
          schema:
            type: boolean
        - name: discontinued
          in: query
          required: true
          schema:
            type: boolean
        - name: businessUnitsIds
          in: query
          required: true
          schema:
            type: array
            items:
              type: integer
              format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ArticleResponse'
      security:
        - Bearer Authentication: []
    delete:
      tags:
        - Artículos
      summary: Eliminar artículo
      operationId: deleteArticle_3
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ArticleEntity'
      security:
        - Bearer Authentication: []
  /api/articles/toggleDiscontinued/{id}:
    put:
      tags:
        - Artículos
      summary: Alternar discontinuidad
      description: Cambia el estado de discontinuidad del artículo
      operationId: toggleDiscontinued
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ArticleResponse'
      security:
        - Bearer Authentication: []
  /api/articles/suppliers/{id}:
    put:
      tags:
        - Artículos
      summary: Editar proveedor de artículo
      operationId: editSupplier_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SupplierArticles'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ArticleResponse'
      security:
        - Bearer Authentication: []
  /api/articles/sku/{id}:
    put:
      tags:
        - Artículos
      summary: Editar SKU a artículo
      operationId: editSku
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: externalId
          in: query
          required: false
          schema:
            type: string
        - name: name
          in: query
          required: true
          schema:
            type: string
        - name: enable
          in: query
          required: true
          schema:
            type: boolean
        - name: heightWithPackaging
          in: query
          required: true
          schema:
            type: number
            format: double
        - name: lengthWithPackaging
          in: query
          required: true
          schema:
            type: number
            format: double
        - name: widthWithPackaging
          in: query
          required: true
          schema:
            type: number
            format: double
        - name: weightWithPackaging
          in: query
          required: true
          schema:
            type: number
            format: double
        - name: height
          in: query
          required: true
          schema:
            type: number
            format: double
        - name: length
          in: query
          required: true
          schema:
            type: number
            format: double
        - name: width
          in: query
          required: true
          schema:
            type: number
            format: double
        - name: weight
          in: query
          required: true
          schema:
            type: number
            format: double
        - name: volumen
          in: query
          required: true
          schema:
            type: number
            format: double
        - name: kit
          in: query
          required: true
          schema:
            type: boolean
        - name: salesUnit
          in: query
          required: true
          schema:
            type: string
        - name: storageUnit
          in: query
          required: true
          schema:
            type: string
        - name: minimumStock
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: shoeSize
          in: query
          required: false
          schema:
            type: number
            format: double
        - name: clothSizeOp1
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: clothSizeOp2
          in: query
          required: false
          schema:
            type: string
        - name: colour
          in: query
          required: false
          schema:
            type: string
        - name: brand
          in: query
          required: false
          schema:
            type: string
        - name: flavour
          in: query
          required: false
          schema:
            type: string
        - name: presentationVolumenM3
          in: query
          required: false
          schema:
            type: number
            format: double
        - name: presentationTypeOfContainer
          in: query
          required: false
          schema:
            type: string
        - name: variety
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SkuResponse'
      security:
        - Bearer Authentication: []
    delete:
      tags:
        - Artículos
      summary: Eliminar SKU de artículo
      operationId: deleteSku
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SkuProjection'
      security:
        - Bearer Authentication: []
  /api/articles/sku/attributeValue/{id}:
    put:
      tags:
        - Artículos
      summary: Editar atributo de sku
      operationId: editAttributeValueSku
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: value
          in: query
          required: false
          schema:
            type: string
        - name: idEnum
          in: query
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AttributeValueSkuResponse'
      security:
        - Bearer Authentication: []
    delete:
      tags:
        - Artículos
      summary: Eliminar atributo de sku
      operationId: deleteAttributeValueSku
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AttributeValueSkuEntity'
      security:
        - Bearer Authentication: []
  /api/articles/attributeValue/{id}:
    put:
      tags:
        - Artículos
      summary: Editar atributo de artículo
      operationId: editAttributeValueArticle
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: value
          in: query
          required: false
          schema:
            type: string
        - name: idEnum
          in: query
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AttributeValueArticleResponse'
      security:
        - Bearer Authentication: []
    delete:
      tags:
        - Artículos
      summary: Eliminar atributo de artículo
      operationId: deleteAttributeValueArticle
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AttributeValueArticleEntity'
      security:
        - Bearer Authentication: []
  /api/acceptedPaymentMethod/{id}:
    get:
      tags:
        - Métodos de pago aceptados
      summary: Obtener método de pago aceptado
      operationId: getAcceptedPaymentMethod
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AcceptedPaymentMethodProjectionResponse'
      security:
        - Bearer Authentication: []
    put:
      tags:
        - Métodos de pago aceptados
      summary: Editar método de pago aceptado
      operationId: editAcceptedPaymentMethod
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcceptedPaymentMethod'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AcceptedPaymentMethodProjectionResponse'
      security:
        - Bearer Authentication: []
    delete:
      tags:
        - Métodos de pago aceptados
      summary: Eliminar método de pago aceptado
      operationId: deleteAcceptedPaymentMethod
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OkResponse'
      security:
        - Bearer Authentication: []
  /api/users/create:
    post:
      tags:
        - Usuarios
      summary: Crear usuario
      operationId: createUser
      parameters:
        - name: userEmail
          in: query
          required: true
          schema:
            type: string
        - name: roleIds
          in: query
          required: true
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: businessUnitsIds
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: branchOfficesIds
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserAndOrganizationResponse'
      security:
        - Bearer Authentication: []
  /api/tickets/createTickets:
    post:
      tags:
        - Tickets
      summary: Crear desde listado de ticket
      operationId: createTickets
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Ticket'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
      security:
        - Bearer Authentication: []
  /api/tickets/:
    post:
      tags:
        - Tickets
      summary: Crear ticket
      operationId: createTicket
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ticket'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TicketProjectionResponse'
      security:
        - Bearer Authentication: []
  /api/suppliers/{supplierId}/contacts:
    post:
      tags:
        - Proveedores
      summary: Agregar contacto a proveedor
      operationId: addContat
      parameters:
        - name: supplierId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: name
          in: query
          required: true
          schema:
            type: string
        - name: phoneNumber
          in: query
          required: false
          schema:
            type: string
        - name: email
          in: query
          required: false
          schema:
            type: string
        - name: role
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SupplierContactResponse'
      security:
        - Bearer Authentication: []
  /api/suppliers/{supplierId}/articles:
    post:
      tags:
        - Proveedores
      summary: Agregar artículo a proveedor
      operationId: addArticle
      parameters:
        - name: supplierId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArticleSuppliers'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SupplierResponse'
      security:
        - Bearer Authentication: []
  /api/suppliers/processExcelTemplate:
    post:
      tags:
        - Proveedores
      summary: Carga de proveedores por archivo excel
      operationId: processExcelTemplate
      requestBody:
        content:
          application/json:
            schema:
              required:
                - file
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExcelProcessResponse'
      security:
        - Bearer Authentication: []
  /api/suppliers/:
    post:
      tags:
        - Proveedores
      summary: Crear proveedor
      operationId: createSupplier
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Supplier'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SupplierResponse'
      security:
        - Bearer Authentication: []
  /api/supplierPaymentMethod/:
    post:
      tags:
        - Métodos de pago de proveedores
      summary: Crear método de pago de proveedor
      operationId: createSupplierPaymentMethod
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SupplierPaymentMethod'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SupplierPaymentMethodProjectionResponse'
      security:
        - Bearer Authentication: []
  /api/roles/{idRole}/unassign/{idUser}:
    post:
      tags:
        - Roles
      summary: Eliminar rol a usuario
      operationId: unassignRole
      parameters:
        - name: idRole
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: idUser
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RoleResponse'
      security:
        - Bearer Authentication: []
  /api/roles/{idRole}/assign/{idUser}:
    post:
      tags:
        - Roles
      summary: Asignar rol a usuario
      operationId: assignRole
      parameters:
        - name: idRole
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: idUser
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RoleResponse'
      security:
        - Bearer Authentication: []
  /api/roles/:
    post:
      tags:
        - Roles
      summary: Crear rol
      operationId: createRole
      parameters:
        - name: name
          in: query
          required: true
          schema:
            type: string
        - name: privilegesId
          in: query
          required: true
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: description
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RoleResponse'
      security:
        - Bearer Authentication: []
  /api/repositionOrders/{businessUnitId}:
    post:
      tags:
        - Órdenes de reposición
      summary: Crear órden de reposición
      operationId: createRepositionOrders
      parameters:
        - name: businessUnitId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CreateRepositionOrder'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListRepositionOrderProjectionResponse'
      security:
        - Bearer Authentication: []
  /api/repositionOrders/preview:
    post:
      tags:
        - Órdenes de reposición
      summary: Vista de previa órdenes de reposición
      operationId: createRepositionOrderPreview
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SkuRepositionOrder'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListRepositionOrderProjectionResponse'
      security:
        - Bearer Authentication: []
  /api/repositionOrders/markReceived:
    post:
      tags:
        - Órdenes de reposición
      summary: Marcar órdenes de reposición como recibidas
      operationId: markReceived
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/MarkReceivedOrderSku'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListRepositionOrderSkuProjectionResponse'
      security:
        - Bearer Authentication: []
  /api/repositionOrders/markAsSent:
    post:
      tags:
        - Órdenes de reposición
      summary: Marcar artículo de orden como enviado
      operationId: markAsReceived
      parameters:
        - name: estimatedDate
          in: query
          required: true
          schema:
            type: string
            format: date
        - name: repositionOrderSkuId
          in: query
          required: true
          schema:
            type: array
            items:
              type: integer
              format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RepositionOrderSentProjectionProjectionResponse'
      security:
        - Bearer Authentication: []
  /api/repositionOrders/draft/{businessUnitId}/{branchOfficeToId}:
    post:
      tags:
        - Órdenes de reposición
      summary: Crear borrador de órdenes de reposición para unidad de negocio
      operationId: createDraftRepositionOrder
      parameters:
        - name: businessUnitId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: branchOfficeToId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SkuRepositionOrder'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DraftRepositionOrderProjectionResponse'
      security:
        - Bearer Authentication: []
  /api/purchaseUnits/:
    post:
      tags:
        - Unidades de compra
      summary: Crear unidades de compra
      operationId: createPurchaseUnit
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseUnit'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PurchaseUnitResponse'
      security:
        - Bearer Authentication: []
  /api/purchaseOrders/preview:
    post:
      tags:
        - Órdenes de compra
      summary: Vista previa de orden de compra
      operationId: createPurchaseOrdersPreview
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SkuPurchaseOrder'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListPurchaseOrderProjectionResponse'
      security:
        - Bearer Authentication: []
  /api/purchaseOrders/markReceived:
    post:
      tags:
        - Órdenes de compra
      summary: Marcar órdenes de compras como recibida
      operationId: markReceived_1
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/MarkReceivedOrderSku'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListPurchaseOrderSkuProjectionResponse'
      security:
        - Bearer Authentication: []
  /api/purchaseOrders/:
    post:
      tags:
        - Órdenes de compra
      summary: Crear orden de compra
      operationId: createPurchaseOrders
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CreatePurchaseOrder'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListPurchaseOrderProjectionResponse'
      security:
        - Bearer Authentication: []
  /api/promotions/schedule/{id}:
    post:
      tags:
        - Promociones
      summary: Agendar promoción
      operationId: schedule
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: startDate
          in: query
          required: true
          schema:
            type: string
            format: date-time
        - name: endDate
          in: query
          required: false
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PromotionProjectionResponse'
      security:
        - Bearer Authentication: []
  /api/promotions/regular:
    post:
      tags:
        - Promociones
      summary: Crear promoción regular
      operationId: createRegularPromotion
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegularPromotion'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PromotionProjectionResponse'
      security:
        - Bearer Authentication: []
  /api/promotions/progressiveDiscount:
    post:
      tags:
        - Promociones
      summary: Crear promoción 'Descuento progresivo'
      operationId: createProgressiveDiscountPromotion
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProgressiveDiscountPromotion'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PromotionProjectionResponse'
      security:
        - Bearer Authentication: []
  /api/promotions/mxn:
    post:
      tags:
        - Promociones
      summary: Crear promoción MxN
      operationId: createMxnPromotion
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MxnPromotion'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PromotionProjectionResponse'
      security:
        - Bearer Authentication: []
  /api/promotions/cancel/{id}:
    post:
      tags:
        - Promociones
      summary: Cancelar promoción
      operationId: cancelPromotion
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PromotionProjectionResponse'
      security:
        - Bearer Authentication: []
  /api/promotions/buyTogether:
    post:
      tags:
        - Promociones
      summary: Crear promoción 'Comprar juntos'
      operationId: createBuyTogetherPromotion
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuyTogetherPromotion'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PromotionProjectionResponse'
      security:
        - Bearer Authentication: []
  /api/promotions/buyOneGetOne:
    post:
      tags:
        - Promociones
      summary: Crear promoción 'Comprar uno, obtener uno'
      operationId: createBuyOneGetOnePromotion
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuyOneGetOnePromotion'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PromotionProjectionResponse'
      security:
        - Bearer Authentication: []
  /api/promotionTypes/:
    post:
      tags:
        - Tipos de promoción
      summary: Crear tipo de promoción
      operationId: createPromotionType
      parameters:
        - name: name
          in: query
          required: false
          schema:
            type: string
        - name: code
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PromotionTypeProjectionResponse'
      security:
        - Bearer Authentication: []
  /api/pricings/schedule/{id}:
    post:
      tags:
        - Pricings
      summary: Agendar pricing
      operationId: schedule_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: startDate
          in: query
          required: true
          schema:
            type: string
            format: date-time
        - name: endDate
          in: query
          required: false
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PricingProjectionResponse'
      security:
        - Bearer Authentication: []
  /api/pricings/cancel/{id}:
    post:
      tags:
        - Pricings
      summary: Cancelar pricing
      operationId: cancelPricing
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PricingProjectionResponse'
      security:
        - Bearer Authentication: []
  /api/pricings/:
    post:
      tags:
        - Pricings
      summary: Crear pricing
      operationId: createPricing
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pricing'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PricingProjectionResponse'
      security:
        - Bearer Authentication: []
  /api/pricingTypes/:
    post:
      tags:
        - Tipos de pricing
      summary: Crear tipo de pricing
      operationId: createPricingType
      parameters:
        - name: description
          in: query
          required: false
          schema:
            type: string
        - name: code
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PricingTypeProjectionResponse'
      security:
        - Bearer Authentication: []
  /api/organizations/register:
    post:
      tags:
        - Organización
      summary: Crear organización con usuario administrador
      description: Crea una nueva organización, con el usuario administrador (y contraseña que se elija). Se envía un correo para verificar la cuenta y así activar tanto el usuario como la organización.
      operationId: registerOrganizationWithAdminUser
      parameters:
        - name: organizationName
          in: query
          required: true
          schema:
            type: string
        - name: userEmail
          in: query
          required: true
          schema:
            type: string
        - name: password
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserAndOrganizationResponse'
  /api/deposits/{depositId}/addSku/{skuId}:
    post:
      tags:
        - Depósito
      summary: Agregar sku a depósito
      operationId: addSkuToDeposit
      parameters:
        - name: depositId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: skuId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: stock
          in: query
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SkuDepositProjectionResponse'
      security:
        - Bearer Authentication: []
  /api/deposits/stocks/processExcelTemplate:
    post:
      tags:
        - Depósito
      summary: Carga de depósitos por archivo excel
      operationId: processExcelTemplateStocks
      requestBody:
        content:
          application/json:
            schema:
              required:
                - file
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExcelProcessResponse'
      security:
        - Bearer Authentication: []
  /api/deposits/processExcelTemplate:
    post:
      tags:
        - Depósito
      summary: Carga de depósitos por archivo excel
      operationId: processExcelTemplate_1
      requestBody:
        content:
          application/json:
            schema:
              required:
                - file
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExcelProcessResponse'
      security:
        - Bearer Authentication: []
  /api/deposits/:
    post:
      tags:
        - Depósito
      summary: Crear depósito
      operationId: createDeposit
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Deposit'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DepositProjectionResponse'
      security:
        - Bearer Authentication: []
  /api/competitors/processExcelTemplate:
    post:
      tags:
        - Competidores
      summary: Carga de marcas por archivo excel
      operationId: processExcelTemplate_2
      requestBody:
        content:
          application/json:
            schema:
              required:
                - file
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExcelProcessResponse'
      security:
        - Bearer Authentication: []
  /api/competitors/:
    post:
      tags:
        - Competidores
      summary: Crear competidor
      operationId: createCompetitor
      parameters:
        - name: externalId
          in: query
          required: false
          schema:
            type: string
        - name: name
          in: query
          required: true
          schema:
            type: string
        - name: website
          in: query
          required: false
          schema:
            type: string
        - name: articlesIds
          in: query
          required: true
          schema:
            type: array
            items:
              type: integer
              format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CompetitorProjectionResponse'
      security:
        - Bearer Authentication: []
  /api/clients/segments/clone/{id}:
    post:
      tags:
        - Clientes
      summary: Clonar segmento de cliente
      operationId: cloneClientSegment
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: copyText
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ClientSegmentProjectionResponse'
      security:
        - Bearer Authentication: []
  /api/clients/segments/:
    post:
      tags:
        - Clientes
      summary: Crear segmento de cliente
      operationId: createClientSegment
      parameters:
        - name: name
          in: query
          required: true
          schema:
            type: string
        - name: description
          in: query
          required: true
          schema:
            type: string
        - name: minAge
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: maxAge
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: sex
          in: query
          required: false
          schema:
            type: string
            enum:
              - MALE
              - FEMALE
        - name: countryIds
          in: query
          required: true
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: stateIds
          in: query
          required: true
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: articlesIds
          in: query
          required: true
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: brandsIds
          in: query
          required: true
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: categoriesIds
          in: query
          required: true
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: branchOfficesIds
          in: query
          required: true
          schema:
            type: array
            items:
              type: integer
              format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ClientSegmentProjectionResponse'
      security:
        - Bearer Authentication: []
  /api/clients/:
    post:
      tags:
        - Clientes
      summary: Crear cliente
      operationId: createClient
      parameters:
        - name: name
          in: query
          required: true
          schema:
            type: string
        - name: lastname
          in: query
          required: false
          schema:
            type: string
        - name: birthdate
          in: query
          required: false
          schema:
            type: string
            format: date
        - name: telephone
          in: query
          required: false
          schema:
            type: string
        - name: cellphone
          in: query
          required: false
          schema:
            type: string
        - name: idTypeId
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: idNumber
          in: query
          required: false
          schema:
            type: string
        - name: countryId
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: stateId
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: locality
          in: query
          required: false
          schema:
            type: string
        - name: address
          in: query
          required: false
          schema:
            type: string
        - name: email
          in: query
          required: false
          schema:
            type: string
        - name: fidelity
          in: query
          required: false
          schema:
            type: string
        - name: sex
          in: query
          required: false
          schema:
            type: string
            enum:
              - MALE
              - FEMALE
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ClientProjectionResponse'
      security:
        - Bearer Authentication: []
  /api/categories/processExcelTemplate:
    post:
      tags:
        - Categorías
      summary: Carga de articulos por archivo excel
      operationId: processExcelTemplate_3
      requestBody:
        content:
          application/json:
            schema:
              required:
                - file
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExcelProcessResponse'
      security:
        - Bearer Authentication: []
  /api/categories/:
    post:
      tags:
        - Categorías
      summary: Crear categoría
      operationId: createCategory
      parameters:
        - name: externalId
          in: query
          required: false
          schema:
            type: string
        - name: name
          in: query
          required: true
          schema:
            type: string
        - name: description
          in: query
          required: false
          schema:
            type: string
        - name: fatherId
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: enable
          in: query
          required: true
          schema:
            type: boolean
        - name: roundingTypeId
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: businessUnitsIds
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CategoryResponse'
      security:
        - Bearer Authentication: []
  /api/businessUnits/{businessUnitId}/createChannel:
    post:
      tags:
        - Unidades de negocio
      summary: Crear canal en la unidad de negocio
      operationId: createChannelInBusinessUnit
      parameters:
        - name: businessUnitId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: channelTypeId
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - name: currenciesIds
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ChannelResponse'
      security:
        - Bearer Authentication: []
  /api/businessUnits/:
    post:
      tags:
        - Unidades de negocio
      summary: Crear unidad de negocio
      operationId: createBusinessUnit
      parameters:
        - name: name
          in: query
          required: true
          schema:
            type: string
        - name: languageId
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: currencyId
          in: query
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BusinessUnitResponse'
      security:
        - Bearer Authentication: []
  /api/brands/processExcelTemplate:
    post:
      tags:
        - Marcas
      summary: Carga de marcas por archivo excel
      operationId: processExcelTemplate_4
      requestBody:
        content:
          application/json:
            schema:
              required:
                - file
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExcelProcessResponse'
      security:
        - Bearer Authentication: []
  /api/brands/:
    post:
      tags:
        - Marcas
      summary: Crear marca
      operationId: createBrand
      parameters:
        - name: externalId
          in: query
          required: false
          schema:
            type: string
        - name: name
          in: query
          required: true
          schema:
            type: string
        - name: description
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BrandProjectionResponse'
      security:
        - Bearer Authentication: []
  /api/branchOffices/{branchOfficeId}/addSku/{skuId}:
    post:
      tags:
        - Sucursales
      summary: Agregar stock de SKU a la sucursal
      operationId: addSkuToBranchOffice
      parameters:
        - name: branchOfficeId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: skuId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: stock
          in: query
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SkuBranchOfficeProjectionResponse'
      security:
        - Bearer Authentication: []
  /api/branchOffices/stocks/processExcelTemplate:
    post:
      tags:
        - Sucursales
      summary: Carga de sucursales por archivo excel
      operationId: processExcelTemplateStocks_1
      requestBody:
        content:
          application/json:
            schema:
              required:
                - file
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExcelProcessResponse'
      security:
        - Bearer Authentication: []
  /api/branchOffices/salePoint:
    post:
      tags:
        - Sucursales
      summary: Crear punto de venta en sucursal
      operationId: addSalePointToBranchOffice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SalePoint'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SalePointProjectionResponse'
      security:
        - Bearer Authentication: []
  /api/branchOffices/processExcelTemplate:
    post:
      tags:
        - Sucursales
      summary: Carga de sucursales por archivo excel
      operationId: processExcelTemplate_5
      requestBody:
        content:
          application/json:
            schema:
              required:
                - file
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExcelProcessResponse'
      security:
        - Bearer Authentication: []
  /api/branchOffices/:
    post:
      tags:
        - Sucursales
      summary: Crear sucural.
      operationId: createBranchOffice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BranchOffice'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BranchOfficeResponse'
      security:
        - Bearer Authentication: []
  /api/auth/resetPassword:
    post:
      tags:
        - Autorización
      summary: Resetear contraseña
      operationId: resetPassword
      parameters:
        - name: token
          in: query
          required: true
          schema:
            type: string
        - name: newPassword
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OkResponse'
  /api/auth/resetPasswordLink:
    post:
      tags:
        - Autorización
      summary: Enviar link de reseteo de contraseña
      operationId: resetPasswordLink
      parameters:
        - name: userEmail
          in: query
          required: true
          schema:
            type: string
        - name: organizationName
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserAndOrganizationResponse'
  /api/auth/resendUserValidation:
    post:
      tags:
        - Autorización
      summary: Re enviar correo de validación
      operationId: resendUserValidation
      parameters:
        - name: userEmail
          in: query
          required: true
          schema:
            type: string
        - name: organizationName
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserAndOrganizationResponse'
  /api/auth/login:
    post:
      tags:
        - Autorización
      summary: Hacer login en la aplicación
      description: Luego de loguearse, se obtiene un token el cual se utilizará en todos los llamados del sistema.
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LoginResponse'
  /api/auth/loginSuperAdmin:
    post:
      tags:
        - Autorización
      summary: Hacer login en la aplicación
      description: Luego de loguearse, se obtiene un token el cual se utilizará en todos los llamados del sistema.
      operationId: loginSuperAdmin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginSuperAdmin'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /api/auth/confirm:
    get:
      tags:
        - Autorización
      summary: Confirmar usuario
      description: Confirmar usuario con un token.
      operationId: confirmUser_1
      parameters:
        - name: token
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LoginResponse'
    post:
      tags:
        - Autorización
      summary: Confirmar usuario y setear contraseña
      description: Confirmar usuario con un token y setear contraseña.
      operationId: confirmUser
      parameters:
        - name: token
          in: query
          required: true
          schema:
            type: string
        - name: password
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LoginResponse'
  /api/attributes/:
    post:
      tags:
        - Atributos
      summary: Crear atributo
      operationId: createAttribute
      parameters:
        - name: attribute
          in: query
          required: true
          schema:
            type: string
        - name: businessUnitsIds
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: isEnum
          in: query
          required: true
          schema:
            type: boolean
        - name: enums
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AttributeResponse'
      security:
        - Bearer Authentication: []
  /api/articles/{id}/sku:
    post:
      tags:
        - Artículos
      summary: Agregar SKU a artículo
      operationId: addSku
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Sku'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SkuWithoutStockResponse'
      security:
        - Bearer Authentication: []
  /api/articles/{id}/addPrice:
    post:
      tags:
        - Artículos
      summary: Agregar precio a artículo
      operationId: addPrice
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: branchOfficeId
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - name: price
          in: query
          required: true
          schema:
            type: number
            format: double
        - name: date
          in: query
          required: false
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ArticleResponse'
      security:
        - Bearer Authentication: []
  /api/articles/{articleId}/attributeValue:
    post:
      tags:
        - Artículos
      summary: Agregar atributo a artículo
      operationId: addAttributeValueArticle
      parameters:
        - name: articleId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: attributeId
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - name: value
          in: query
          required: false
          schema:
            type: string
        - name: idEnum
          in: query
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AttributeValueArticleResponse'
      security:
        - Bearer Authentication: []
  /api/articles/sku/{id}/attributeValue:
    post:
      tags:
        - Artículos
      summary: Agregar atributo a sku
      operationId: addAttributeValueSku
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: attributeId
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - name: value
          in: query
          required: false
          schema:
            type: string
        - name: idEnum
          in: query
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AttributeValueSkuResponse'
      security:
        - Bearer Authentication: []
  /api/articles/processExcelTemplate:
    post:
      tags:
        - Artículos
      summary: Carga de articulos por archivo excel
      operationId: processExcelTemplate_6
      requestBody:
        content:
          application/json:
            schema:
              required:
                - file
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExcelProcessResponse'
      security:
        - Bearer Authentication: []
  /api/articles/:
    post:
      tags:
        - Artículos
      summary: Crear artículo
      operationId: createArticle
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Article'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ArticleProjectionWithoutStockResponse'
      security:
        - Bearer Authentication: []
  /api/acceptedPaymentMethod/processExcelTemplate:
    post:
      tags:
        - Métodos de pago aceptados
      summary: Carga de métodos de pago aceptado por archivo excel
      operationId: processExcelTemplate_7
      requestBody:
        content:
          application/json:
            schema:
              required:
                - file
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExcelProcessResponse'
      security:
        - Bearer Authentication: []
  /api/acceptedPaymentMethod/:
    post:
      tags:
        - Métodos de pago aceptados
      summary: Crear método de pago aceptado
      operationId: createAcceptedPaymentMethod
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcceptedPaymentMethod'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AcceptedPaymentMethodProjectionResponse'
      security:
        - Bearer Authentication: []
  /api/types/ticketDocumentTypes:
    get:
      tags:
        - Artículos
      summary: Obtener los tipos de documento de los tickets
      operationId: getTicketDocumentTypes
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OkResponse'
      security:
        - Bearer Authentication: []
  /api/types/sex:
    get:
      tags:
        - Artículos
      summary: Obtener los tipos de sexo de la apliación
      operationId: getSexs
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OkResponse'
      security:
        - Bearer Authentication: []
  /api/types/recurrenceTypes:
    get:
      tags:
        - Artículos
      summary: Obtener los tipos de recuerrencia de la aplicación
      operationId: getRecurrenceTypes
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OkResponse'
      security:
        - Bearer Authentication: []
  /api/types/endPricingTypes:
    get:
      tags:
        - Artículos
      summary: Obtener los tipos de fin de pricing de la aplicación
      operationId: getPricingEnd
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OkResponse'
      security:
        - Bearer Authentication: []
  /api/tickets/getProgress/{id}:
    get:
      tags:
        - Tickets
      operationId: getProgress
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OkResponse'
      security:
        - Bearer Authentication: []
  /api/suppliers/query:
    get:
      tags:
        - Proveedores
      summary: Consultar proveedores paginado
      operationId: query
      parameters:
        - name: id
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: name
          in: query
          required: false
          schema:
            type: string
        - name: externalId
          in: query
          required: false
          schema:
            type: string
        - name: businessUnitId
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: page
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: orderBy
          in: query
          required: false
          schema:
            type: array
            items:
              $ref: '#/components/schemas/SortProperty'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageSupplierIdNameProjectionResponse'
      security:
        - Bearer Authentication: []
  /api/suppliers/getAll:
    get:
      tags:
        - Proveedores
      summary: Obtener todos los proveedores de la organización
      operationId: getAllByOrganization
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SupplierIdNameResponse'
      security:
        - Bearer Authentication: []
  /api/suppliers/excelTemplate:
    get:
      tags:
        - Proveedores
      summary: Obtener plantilla de carga en excel
      operationId: getExcelTemplate
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: string
                  format: byte
      security:
        - Bearer Authentication: []
  /api/supplierPaymentMethod/getAll:
    get:
      tags:
        - Métodos de pago de proveedores
      summary: Obtener todos los métodos de pago de proveedores de la organización
      operationId: getAllByOrganization_1
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListSupplierPaymentMethodProjectionResponse'
      security:
        - Bearer Authentication: []
  /api/repositionOrders/statistics:
    get:
      tags:
        - Órdenes de reposición
      summary: Obtener estadísticas de órdenes de reposición
      operationId: getStatistics
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OkResponse'
      security:
        - Bearer Authentication: []
  /api/repositionOrders/query:
    get:
      tags:
        - Órdenes de reposición
      summary: Consultar órdenes de reposición paginado
      operationId: queryRepositionOrder
      parameters:
        - name: branchOfficeFromId
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: depositFromId
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: branchOfficeToId
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: depositToId
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: businessUnitId
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: status
          in: query
          required: false
          schema:
            type: string
            enum:
              - SUGGESTED
              - GENERATED
              - SENT
              - IN_PROGRESS
              - PARTIAL
              - NOT_COMPLETED
              - COMPLETED
              - CANCEL
        - name: articlesIds
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: startCreatedDate
          in: query
          required: false
          schema:
            type: string
            format: date
        - name: endCreatedDate
          in: query
          required: false
          schema:
            type: string
            format: date
        - name: startEstimatedDeliveryDate
          in: query
          required: false
          schema:
            type: string
            format: date
        - name: endEstimatedDeliveryDate
          in: query
          required: false
          schema:
            type: string
            format: date
        - name: page
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: orderBy
          in: query
          required: false
          schema:
            type: array
            items:
              $ref: '#/components/schemas/SortProperty'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageRepositionOrderProjectionResponse'
      security:
        - Bearer Authentication: []
  /api/repositionOrders/queryStockout:
    get:
      tags:
        - Órdenes de reposición
      summary: Consultar por quiebre de stock
      operationId: queryStockout
      parameters:
        - name: skuId
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: articleId
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: minStock
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: maxStock
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: branchOfficeId
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: businessUnitId
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: page
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: orderBy
          in: query
          required: false
          schema:
            type: array
            items:
              $ref: '#/components/schemas/SortProperty'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageStockoutResponse'
      security:
        - Bearer Authentication: []
  /api/repositionOrders/queryRequests:
    get:
      tags:
        - Órdenes de reposición
      summary: Consultar órdenes de reposición paginado
      operationId: queryRequestsRepositionOrder
      parameters:
        - name: branchOfficeFromId
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: businessUnitId
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: depositFromId
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: branchOfficeToId
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: depositToId
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: status
          in: query
          required: false
          schema:
            type: string
            enum:
              - SUGGESTED
              - GENERATED
              - SENT
              - IN_PROGRESS
              - PARTIAL
              - NOT_COMPLETED
              - COMPLETED
              - CANCEL
        - name: articlesIds
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: startCreatedDate
          in: query
          required: false
          schema:
            type: string
            format: date
        - name: endCreatedDate
          in: query
          required: false
          schema:
            type: string
            format: date
        - name: startEstimatedDeliveryDate
          in: query
          required: false
          schema:
            type: string
            format: date
        - name: endEstimatedDeliveryDate
          in: query
          required: false
          schema:
            type: string
            format: date
        - name: page
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: orderBy
          in: query
          required: false
          schema:
            type: array
            items:
              $ref: '#/components/schemas/SortProperty'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageRepositionOrderProjectionResponse'
      security:
        - Bearer Authentication: []
  /api/repositionOrders/findSkuArticleQuantityDestiny:
    get:
      tags:
        - Órdenes de reposición
      summary: Consultar solicitudes
      operationId: findSkuArticleQuantityDestiny
      parameters:
        - name: branchOfficeToId
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: depositToId
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: page
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: orderBy
          in: query
          required: false
          schema:
            type: array
            items:
              $ref: '#/components/schemas/SortProperty'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RepositionOrderSkuOrderProjectionProjectionResponse'
      security:
        - Bearer Authentication: []
  /api/repositionOrders/draft/{businessUnitId}:
    get:
      tags:
        - Órdenes de reposición
      summary: Obtener borrador de órdenes de reposición para unidad de negocio
      operationId: getDraftRepositionOrder
      parameters:
        - name: businessUnitId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DraftRepositionOrderSavedProjectionResponse'
      security:
        - Bearer Authentication: []
  /api/purchaseUnits/query:
    get:
      tags:
        - Unidades de compra
      summary: Consultar unidades de negocio paginado
      operationId: query_1
      parameters:
        - name: name
          in: query
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: orderBy
          in: query
          required: false
          schema:
            type: array
            items:
              $ref: '#/components/schemas/SortProperty'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagePurchaseUnitProjectionResponse'
      security:
        - Bearer Authentication: []
  /api/purchaseUnits/getAll:
    get:
      tags:
        - Unidades de compra
      summary: Obtener todas las unidades de compra de la organización
      operationId: getAllByOrganization_2
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListPurchaseUnitProjectionResponse'
      security:
        - Bearer Authentication: []
  /api/purchaseOrders/statistics:
    get:
      tags:
        - Órdenes de compra
      summary: Obtener estadísticas de órdenes de compra
      operationId: getStatistics_1
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OkResponse'
      security:
        - Bearer Authentication: []
  /api/purchaseOrders/query:
    get:
      tags:
        - Órdenes de compra
      summary: Consultar ordenes de compras paginado
      operationId: queryPurchaseOrder
      parameters:
        - name: supplierId
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: status
          in: query
          required: false
          schema:
            type: string
            enum:
              - SUGGESTED
              - GENERATED
              - SENT
              - IN_PROGRESS
              - PARTIAL
              - NOT_COMPLETED
              - COMPLETED
              - CANCEL
        - name: articlesIds
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: categoriesIds
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: startCreatedDate
          in: query
          required: false
          schema:
            type: string
            format: date
        - name: endCreatedDate
          in: query
          required: false
          schema:
            type: string
            format: date
        - name: startEstimatedDeliveryDate
          in: query
          required: false
          schema:
            type: string
            format: date
        - name: endEstimatedDeliveryDate
          in: query
          required: false
          schema:
            type: string
            format: date
        - name: minStock
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: maxStock
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: page
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagePurchaseOrderProjectionResponse'
      security:
        - Bearer Authentication: []
  /api/promotions/{id}:
    get:
      tags:
        - Promociones
      summary: Obtener promoción
      operationId: getPromotionById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PromotionProjectionResponse'
      security:
        - Bearer Authentication: []
    delete:
      tags:
        - Promociones
      summary: Eliminar promoción
      operationId: deletePromotion
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OkResponse'
      security:
        - Bearer Authentication: []
  /api/promotions/monthByPromotion/{date}:
    get:
      tags:
        - Promociones
      summary: Obtener promociónes del mes
      operationId: getPromotionsOfMontByMonth
      parameters:
        - name: date
          in: path
          required: true
          schema:
            type: string
            format: date
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OkResponse'
      security:
        - Bearer Authentication: []
  /api/promotions/month/{date}:
    get:
      tags:
        - Promociones
      summary: Obtener promociónes del mes por dia
      operationId: getPromotionsOfMonth
      parameters:
        - name: date
          in: path
          required: true
          schema:
            type: string
            format: date
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OkResponse'
      security:
        - Bearer Authentication: []
  /api/pricings/{id}/changesOfPrice:
    get:
      tags:
        - Pricings
      summary: Obtener cambios de precio
      operationId: getChangesOfPrice
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OkResponse'
      security:
        - Bearer Authentication: []
  /api/pricings/monthByPricing/{date}:
    get:
      tags:
        - Pricings
      summary: Obtener pricing por mes
      operationId: getPricingsOfMontByMonth
      parameters:
        - name: date
          in: path
          required: true
          schema:
            type: string
            format: date
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OkResponse'
      security:
        - Bearer Authentication: []
  /api/pricingTypes/getAll:
    get:
      tags:
        - Tipos de pricing
      summary: Obtener todos los tipo de pricing de la organización
      operationId: getAllByOrganization_3
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListPricingTypeProjectionResponse'
      security:
        - Bearer Authentication: []
  /api/health:
    get:
      tags:
        - Chequeo de salud
      summary: Chequeo
      operationId: health
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /api/deposits/stocks/excelTemplate:
    get:
      tags:
        - Depósito
      summary: Obtener plantilla de carga en excel
      operationId: getExcelTemplateStocks
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: string
                  format: byte
      security:
        - Bearer Authentication: []
  /api/deposits/stockAdjustments/{id}:
    get:
      tags:
        - Depósito
      summary: Obtener los ajustes de stock de un sku en un depósito
      operationId: getStockAdjustmends
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: page
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OkResponse'
      security:
        - Bearer Authentication: []
  /api/deposits/query:
    get:
      tags:
        - Depósito
      summary: Consultar depositos paginado
      operationId: query_2
      parameters:
        - name: id
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: name
          in: query
          required: false
          schema:
            type: string
        - name: externalId
          in: query
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: orderBy
          in: query
          required: false
          schema:
            type: array
            items:
              $ref: '#/components/schemas/SortProperty'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageDepositProjectionIdNameResponse'
      security:
        - Bearer Authentication: []
  /api/deposits/getAll:
    get:
      tags:
        - Depósito
      summary: Obtener todos los depósitos de la organización
      operationId: getAllByOrganization_4
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListDepositIdNameProjectionResponse'
      security:
        - Bearer Authentication: []
  /api/deposits/excelTemplate:
    get:
      tags:
        - Depósito
      summary: Obtener plantilla de carga en excel
      operationId: getExcelTemplate_1
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: string
                  format: byte
      security:
        - Bearer Authentication: []
  /api/competitors/excelTemplate:
    get:
      tags:
        - Competidores
      summary: Obtener plantilla de carga en excel
      operationId: getExcelTemplate_2
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: string
                  format: byte
      security:
        - Bearer Authentication: []
  /api/clients/segments/query:
    get:
      tags:
        - Clientes
      summary: Consultar segmento de clientes paginado
      operationId: query_3
      parameters:
        - name: name
          in: query
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: orderBy
          in: query
          required: false
          schema:
            type: array
            items:
              $ref: '#/components/schemas/SortProperty'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageClientSegmentOnlyNameProjectionResponse'
      security:
        - Bearer Authentication: []
  /api/clients/segments/getAll:
    get:
      tags:
        - Clientes
      summary: Obtener todos los segmentos de clientes
      operationId: getAllSegments
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListClientSegmentProjectionResponse'
      security:
        - Bearer Authentication: []
  /api/clients/numberBySegment/{segmentId}:
    get:
      tags:
        - Clientes
      summary: Obtener clientes por segmento de cliente
      operationId: getNumberOfClientsBySegment
      parameters:
        - name: segmentId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/IntegerResponse'
      security:
        - Bearer Authentication: []
  /api/clients/getAll:
    get:
      tags:
        - Clientes
      summary: Obtener todos los clientes de la organización
      operationId: getAllByOrganization_5
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListClientProjectionResponse'
      security:
        - Bearer Authentication: []
  /api/clients/clientSegmentsWithSize:
    get:
      tags:
        - Clientes
      summary: Obtener segmentos de clientes con cantidad de clientes
      operationId: getClientSegmentWithSize
      parameters:
        - name: page
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OkResponse'
      security:
        - Bearer Authentication: []
  /api/clients/bySegment/{segmentId}:
    get:
      tags:
        - Clientes
      summary: Obtener clientes por segmento de cliente
      operationId: getClientsBySegment
      parameters:
        - name: segmentId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: page
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageClientProjectionResponse'
      security:
        - Bearer Authentication: []
  /api/categories/query:
    get:
      tags:
        - Categorías
      summary: Consultar categorías paginado
      operationId: queryCategories
      parameters:
        - name: name
          in: query
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: orderBy
          in: query
          required: false
          schema:
            type: array
            items:
              $ref: '#/components/schemas/SortProperty'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageCategoryIdNameProjectionResponse'
      security:
        - Bearer Authentication: []
  /api/categories/getPossibleFathers/{categoryId}:
    get:
      tags:
        - Categorías
      summary: Obtener posibles padres de una categoría
      operationId: getAllPossibleFathers
      parameters:
        - name: categoryId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListCategoryResponse'
      security:
        - Bearer Authentication: []
  /api/categories/getAll:
    get:
      tags:
        - Categorías
      summary: Obtener todas las categorías por organización
      operationId: getAllByOrganization_6
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListCategoryResponse'
      security:
        - Bearer Authentication: []
  /api/categories/excelTemplate:
    get:
      tags:
        - Categorías
      summary: Obtener plantilla de carga en excel
      operationId: getExcelTemplate_3
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: string
                  format: byte
      security:
        - Bearer Authentication: []
  /api/businessUnits/{id}:
    get:
      tags:
        - Unidades de negocio
      summary: Obener unidad de negocio
      operationId: getBussinesUnit
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BusinessUnitProjectionResponse'
      security:
        - Bearer Authentication: []
  /api/businessUnits/getAll:
    get:
      tags:
        - Unidades de negocio
      summary: Obtener todas las unidades de negocio de la organización
      operationId: getAllByOrganization_7
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListBusinessUnitChannelProjectionResponse'
      security:
        - Bearer Authentication: []
  /api/businessUnits/channel/getAll:
    get:
      tags:
        - Unidades de negocio
      summary: Obtener todos los canales de la organización
      operationId: getAllChannelsByOrganization
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OkResponse'
      security:
        - Bearer Authentication: []
  /api/brands/query:
    get:
      tags:
        - Marcas
      summary: Consultar marcas paginado
      operationId: query_4
      parameters:
        - name: id
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: name
          in: query
          required: false
          schema:
            type: string
        - name: externalId
          in: query
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: orderBy
          in: query
          required: false
          schema:
            type: array
            items:
              $ref: '#/components/schemas/SortProperty'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageBrandProjectionResponse'
      security:
        - Bearer Authentication: []
  /api/brands/getAll:
    get:
      tags:
        - Marcas
      summary: Obtener todas las marcas de la organización
      operationId: getAllByOrganization_8
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListBrandProjectionResponse'
      security:
        - Bearer Authentication: []
  /api/brands/excelTemplate:
    get:
      tags:
        - Marcas
      summary: Obtener plantilla de carga en excel
      operationId: getExcelTemplate_4
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: string
                  format: byte
      security:
        - Bearer Authentication: []
  /api/branchOffices/stocks/excelTemplate:
    get:
      tags:
        - Sucursales
      summary: Obtener plantilla de carga en excel
      operationId: getExcelTemplateStocks_1
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: string
                  format: byte
      security:
        - Bearer Authentication: []
  /api/branchOffices/stockAdjustments/{id}:
    get:
      tags:
        - Sucursales
      summary: Obtener los ajustes de stock de un sku en una sucursal
      operationId: getStockAdjustmends_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: page
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OkResponse'
      security:
        - Bearer Authentication: []
  /api/branchOffices/query:
    get:
      tags:
        - Sucursales
      summary: Consultar sucursales paginado
      operationId: query_5
      parameters:
        - name: id
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: name
          in: query
          required: false
          schema:
            type: string
        - name: externalId
          in: query
          required: false
          schema:
            type: string
        - name: businessUnitId
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: page
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: orderBy
          in: query
          required: false
          schema:
            type: array
            items:
              $ref: '#/components/schemas/SortProperty'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageBranchOfficeProjectionIdNameResponse'
      security:
        - Bearer Authentication: []
  /api/branchOffices/getByBusinessUnitIds:
    get:
      tags:
        - Sucursales
      summary: Obtener sucursales por unidades de negocio
      operationId: getBranchOfficesByBusinessUnits
      parameters:
        - name: businessUnitIds
          in: query
          required: true
          schema:
            type: array
            items:
              type: integer
              format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BranchOfficeByBusinessUnitResponse'
      security:
        - Bearer Authentication: []
  /api/branchOffices/excelTemplate:
    get:
      tags:
        - Sucursales
      summary: Obtener plantilla de carga en excel
      operationId: getExcelTemplate_5
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: string
                  format: byte
      security:
        - Bearer Authentication: []
  /api/branchOffices/branchOfficeTypes:
    get:
      tags:
        - Sucursales
      summary: Obtener tipo de sucursales
      operationId: getBranchOfficeTypes
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OkResponse'
      security:
        - Bearer Authentication: []
  /api/auth/confirmToken:
    get:
      tags:
        - Autorización
      summary: Confirmar si el token existe
      description: Para validar el usuario, se confirma que el mismo sea valido y si necesita setear password.
      operationId: existToken
      parameters:
        - name: token
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ConfirmationTokenAndSetupPasswordResponse'
  /api/attributes/query:
    get:
      tags:
        - Atributos
      summary: Consultar atributos paginado
      operationId: query_6
      parameters:
        - name: attribute
          in: query
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: orderBy
          in: query
          required: false
          schema:
            type: array
            items:
              $ref: '#/components/schemas/SortProperty'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageAttributeProjectionResponse'
      security:
        - Bearer Authentication: []
  /api/attributes/getAll:
    get:
      tags:
        - Atributos
      summary: Obtener todos los atributos de la organización
      operationId: getAllByOrganization_9
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListAttributesResponse'
      security:
        - Bearer Authentication: []
  /api/articles/query:
    get:
      tags:
        - Artículos
      summary: Consultar artículos paginado
      operationId: queryArticles
      parameters:
        - name: id
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: externalId
          in: query
          required: false
          schema:
            type: string
        - name: name
          in: query
          required: false
          schema:
            type: string
        - name: categoryId
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: businessUnitId
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: page
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: orderBy
          in: query
          required: false
          schema:
            type: array
            items:
              $ref: '#/components/schemas/SortProperty'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageArticleIdNameProjectionResponse'
      security:
        - Bearer Authentication: []
  /api/articles/querySkus:
    get:
      tags:
        - Artículos
      summary: Consultar skus paginado
      operationId: querySkus
      parameters:
        - name: articleId
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: externalId
          in: query
          required: false
          schema:
            type: string
        - name: externalArticleId
          in: query
          required: false
          schema:
            type: string
        - name: articleName
          in: query
          required: false
          schema:
            type: string
        - name: name
          in: query
          required: false
          schema:
            type: string
        - name: id
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: categoryId
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: page
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: orderBy
          in: query
          required: false
          schema:
            type: array
            items:
              $ref: '#/components/schemas/SortProperty'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageSkuIdNameProjectionResponse'
      security:
        - Bearer Authentication: []
  /api/articles/querySkuStockBranchOffice:
    get:
      tags:
        - Artículos
      summary: Consulta sku con stock en sucursal
      operationId: getPageSkuIdNameStockBranchOfficeResponse
      parameters:
        - name: articleId
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: branchOfficeId
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - name: businessUnitId
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - name: page
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageSkuIdNameStockBranchOfficeResponse'
      security:
        - Bearer Authentication: []
  /api/articles/getArticlesBySuppliers:
    get:
      tags:
        - Artículos
      summary: Obtener artículos por proveedor
      description: Se obtiene un JSONObject
      operationId: getArticlesBySuppliers
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OkResponse'
      security:
        - Bearer Authentication: []
  /api/articles/getAll:
    get:
      tags:
        - Artículos
      summary: Obtener todos los artículos de la organización
      operationId: getAllByOrganization_10
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ArticleIdNameResponse'
      security:
        - Bearer Authentication: []
  /api/articles/getAllWithStock:
    get:
      tags:
        - Artículos
      summary: Obtener todos los artículos con sus stocks de la organización
      operationId: getAllByOrganizationWithStock
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListArticleIdNameStockProjectionResponse'
      security:
        - Bearer Authentication: []
  /api/articles/getAllWithStockSort:
    get:
      tags:
        - Artículos
      summary: Obtener todos los artículos con sus stocks ordenados de la organización
      operationId: getAllByOrganizationWithStockSort
      parameters:
        - name: page
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: sortStock
          in: query
          required: false
          schema:
            type: string
        - name: articlesIds
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: categoriesIds
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageArticleIdNameStockProjectionResponse'
      security:
        - Bearer Authentication: []
  /api/articles/getAllWithStockSortAndSkuStock:
    get:
      tags:
        - Artículos
      summary: Obtener todos los artículos con sus skus y stocks de la organización
      operationId: getAllWithStockSortAndSkuStock
      parameters:
        - name: page
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: sortStock
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageArticleIdNameSkuWithStocksProjectionResponse'
      security:
        - Bearer Authentication: []
  /api/articles/getAllWithSku:
    get:
      tags:
        - Artículos
      summary: Obtener todos los artículos y sus skus de la organización
      operationId: getAllWithSkuByOrganization
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListArticleIdNameSkusProjectionResponse'
      security:
        - Bearer Authentication: []
  /api/articles/excelTemplate:
    get:
      tags:
        - Artículos
      summary: Obtener plantilla de carga en excel
      operationId: getExcelTemplate_6
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: string
                  format: byte
      security:
        - Bearer Authentication: []
  /api/acceptedPaymentMethod/types:
    get:
      tags:
        - Métodos de pago aceptados
      summary: Obtener tipos de método de pago aceptado
      operationId: getTypes
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListAcceptedPaymentMethodTypeResponse'
      security:
        - Bearer Authentication: []
  /api/acceptedPaymentMethod/query:
    get:
      tags:
        - Métodos de pago aceptados
      summary: Consultar métodos de pago paginado
      operationId: query_7
      parameters:
        - name: id
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: name
          in: query
          required: false
          schema:
            type: string
        - name: externalId
          in: query
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: orderBy
          in: query
          required: false
          schema:
            type: array
            items:
              $ref: '#/components/schemas/SortProperty'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageAcceptedPaymentMethodProjectionResponse'
      security:
        - Bearer Authentication: []
  /api/acceptedPaymentMethod/getByBussinesUnitId/{id}:
    get:
      tags:
        - Métodos de pago aceptados
      summary: Obtener método de pago aceptado por unidad de negocio
      operationId: getByBusinessUnitId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListAcceptedPaymentMethodProjectionResponse'
      security:
        - Bearer Authentication: []
  /api/acceptedPaymentMethod/getAll:
    get:
      tags:
        - Métodos de pago aceptados
      summary: Obtener todos los métodos de pago aceptado de la organización
      operationId: getAllByOrganization_11
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListAcceptedPaymentMethodProjectionResponse'
      security:
        - Bearer Authentication: []
  /api/acceptedPaymentMethod/excelTemplate:
    get:
      tags:
        - Métodos de pago aceptados
      summary: Obtener plantilla de carga en excel
      operationId: getExcelTemplate_7
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: string
                  format: byte
      security:
        - Bearer Authentication: []
  /api/users/{userId}:
    delete:
      tags:
        - Usuarios
      summary: Eliminar usuario
      operationId: deleteUser
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserEntity'
      security:
        - Bearer Authentication: []
  /api/repositionOrders/{repositionOrderId}:
    delete:
      tags:
        - Órdenes de reposición
      summary: Eliminar órden de reposición
      operationId: deleteArticle_1
      parameters:
        - name: repositionOrderId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OkResponse'
      security:
        - Bearer Authentication: []
  /api/purchaseOrders/{purchaseOrderId}:
    delete:
      tags:
        - Órdenes de compra
      summary: Eliminar orden de compra
      operationId: deleteArticle_2
      parameters:
        - name: purchaseOrderId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OkResponse'
      security:
        - Bearer Authentication: []
  /api/deposits/deleteSku/{id}:
    delete:
      tags:
        - Depósito
      summary: Eliminar sku de depósito
      operationId: deleteSkuFromDeposit
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OkResponse'
      security:
        - Bearer Authentication: []
  /api/branchOffices/deleteSku/{id}:
    delete:
      tags:
        - Sucursales
      summary: Eliminar SKU de una sucursal
      operationId: deleteSkuFromBranchOffice
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OkResponse'
      security:
        - Bearer Authentication: []
  /api/articles/removePrice/{id}:
    delete:
      tags:
        - Artículos
      summary: Eliminar precio de artículo
      operationId: deletePrice
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ArticleEntity'
      security:
        - Bearer Authentication: []
components:
  schemas:
    BranchOfficeProjectionIdName:
      type: object
      properties:
        name:
          type: string
        id:
          type: integer
          format: int64
        externalId:
          type: string
    BusinessUnitIdNameProjection:
      type: object
      properties:
        name:
          type: string
        id:
          type: integer
          format: int64
    PrivilegeProjection:
      type: object
      properties:
        name:
          type: string
        id:
          type: integer
          format: int64
        descriptionEs:
          type: string
        descriptionEn:
          type: string
    RoleProjection:
      type: object
      properties:
        name:
          type: string
        id:
          type: integer
          format: int64
        description:
          type: string
        privileges:
          type: array
          items:
            $ref: '#/components/schemas/PrivilegeProjection'
        organizationName:
          type: string
    UserProjection:
      type: object
      properties:
        id:
          type: integer
          format: int64
        roles:
          type: array
          items:
            $ref: '#/components/schemas/RoleProjection'
        enabled:
          type: boolean
        organizationName:
          type: string
        branchOffices:
          type: array
          items:
            $ref: '#/components/schemas/BranchOfficeProjectionIdName'
        organizationId:
          type: integer
          format: int64
        email:
          type: string
        businessUnits:
          type: array
          items:
            $ref: '#/components/schemas/BusinessUnitIdNameProjection'
    UserProjectionResponse:
      type: object
      properties:
        message:
          type: string
        status:
          type: string
          enum:
            - OK
            - ERROR
        data:
          $ref: '#/components/schemas/UserProjection'
    Ticket:
      required:
        - acceptedPaymentMethodIds
        - accumulatePoints
        - channelId
        - clientRut
        - code
        - consumedPoints
        - currencyId
        - date
        - documentType
        - iva
        - promotionIds
        - salePointId
        - skusWithPrice
        - subtotal
        - total
      type: object
      properties:
        code:
          type: integer
          format: int32
        clientRut:
          type: integer
          format: int32
        date:
          type: string
          format: date
        subtotal:
          type: number
          format: double
        iva:
          type: number
          format: double
        total:
          type: number
          format: double
        documentType:
          $ref: '#/components/schemas/TicketDocumentType'
        accumulatePoints:
          type: number
          format: double
        consumedPoints:
          type: number
          format: double
        currencyId:
          type: integer
          format: int32
        channelId:
          type: integer
          format: int32
        salePointId:
          type: integer
          format: int32
        skusWithPrice:
          type: array
          items:
            $ref: '#/components/schemas/TicketSku'
        acceptedPaymentMethodIds:
          type: array
          example:
            - 1
            - 2
            - 3
          items:
            type: integer
            format: int64
        fidelity:
          type: string
        promotionIds:
          type: array
          example:
            - 1
            - 2
            - 3
          items:
            type: integer
            format: int64
    TicketDocumentType:
      type: string
      enum:
        - CASH_TICKET
        - CREDIT_INVOICE
        - CREDIT_NOTE
    TicketSku:
      required:
        - quantity
        - skuId
        - unitPrice
      type: object
      properties:
        skuId:
          type: integer
          format: int32
        unitPrice:
          type: number
          format: double
        quantity:
          type: integer
          format: int32
    AcceptedPaymentMethodProjection:
      type: object
      properties:
        name:
          type: string
        id:
          type: integer
          format: int64
        type:
          $ref: '#/components/schemas/AcceptedPaymentMethodTypeProjection'
        externalId:
          type: string
        feeRangeMax:
          type: integer
          format: int32
        feeRangeMin:
          type: integer
          format: int32
        businessUnits:
          type: array
          items:
            $ref: '#/components/schemas/BusinessUnitIdNameProjection'
    AcceptedPaymentMethodTypeProjection:
      type: object
      properties:
        id:
          type: integer
          format: int64
        type:
          type: string
        descriptionEs:
          type: string
        descriptionEn:
          type: string
    CategoryIdAndNameProjection:
      type: object
      properties:
        name:
          type: string
        id:
          type: integer
          format: int64
        externalId:
          type: string
    ChannelIdTypeBusinessUnitProjection:
      type: object
      properties:
        id:
          type: integer
          format: int64
        type:
          $ref: '#/components/schemas/ChannelTypeProjection'
        businessUnitIdName:
          type: object
          properties:
            empty:
              type: boolean
          additionalProperties:
            type: object
    ChannelTypeProjection:
      type: object
      properties:
        id:
          type: integer
          format: int64
        type:
          type: string
        descriptionEs:
          type: string
        descriptionEn:
          type: string
    CurrencyProjection:
      type: object
      properties:
        name:
          type: string
        id:
          type: integer
          format: int64
        shortName:
          type: string
    JSONObject:
      type: object
      properties:
        empty:
          type: boolean
      additionalProperties:
        type: object
    PromotionIdNameTypeDistributeProjection:
      type: object
      properties:
        name:
          type: string
        id:
          type: integer
          format: int64
        distributeLines:
          type: boolean
        type:
          $ref: '#/components/schemas/JSONObject'
    SalePointBranchOfficeDataProjection:
      type: object
      properties:
        name:
          type: string
        id:
          type: integer
          format: int64
        acceptedPaymentMethods:
          type: array
          items:
            $ref: '#/components/schemas/AcceptedPaymentMethodProjection'
        branchOffice:
          $ref: '#/components/schemas/JSONObject'
    SkuIdNameProjection:
      type: object
      properties:
        name:
          type: string
        id:
          type: integer
          format: int64
        externalId:
          type: string
        category:
          $ref: '#/components/schemas/CategoryIdAndNameProjection'
        articleId:
          type: integer
          format: int64
        articleName:
          type: string
    TicketProjection:
      type: object
      properties:
        id:
          type: integer
          format: int64
        channel:
          $ref: '#/components/schemas/ChannelIdTypeBusinessUnitProjection'
        currency:
          $ref: '#/components/schemas/CurrencyProjection'
        date:
          type: string
          format: date
        code:
          type: integer
          format: int32
        fidelity:
          type: string
        acceptedPaymentMethods:
          type: array
          items:
            $ref: '#/components/schemas/AcceptedPaymentMethodProjection'
        clientRut:
          type: integer
          format: int32
        subtotal:
          type: number
          format: double
        iva:
          type: number
          format: double
        total:
          type: number
          format: double
        accumulatePoints:
          type: number
          format: double
        consumedPoints:
          type: number
          format: double
        skusWithUnitPrice:
          type: array
          items:
            $ref: '#/components/schemas/TicketSkuProjection'
        salePoint:
          $ref: '#/components/schemas/SalePointBranchOfficeDataProjection'
        promotions:
          type: array
          items:
            $ref: '#/components/schemas/PromotionIdNameTypeDistributeProjection'
        documentType:
          $ref: '#/components/schemas/JSONObject'
    TicketProjectionResponse:
      type: object
      properties:
        message:
          type: string
        status:
          type: string
          enum:
            - OK
            - ERROR
        data:
          $ref: '#/components/schemas/TicketProjection'
    TicketSkuProjection:
      type: object
      properties:
        id:
          type: integer
          format: int64
        sku:
          $ref: '#/components/schemas/SkuIdNameProjection'
        quantity:
          type: integer
          format: int32
        unitPrice:
          type: number
          format: double
    ArticleIdNameProjection:
      type: object
      properties:
        name:
          type: string
        id:
          type: integer
          format: int64
        externalId:
          type: string
    ArticleSuppliersProjection:
      type: object
      properties:
        id:
          type: integer
          format: int64
        principal:
          type: boolean
        supplier:
          $ref: '#/components/schemas/SupplierIdNameProjection'
        article:
          $ref: '#/components/schemas/ArticleIdNameProjection'
        commercialTerm:
          $ref: '#/components/schemas/CommercialTermProjection'
        purchaseUnit:
          $ref: '#/components/schemas/PurchaseUnitProjection'
    CommercialTermProjection:
      type: object
      properties:
        id:
          type: integer
          format: int64
        cost:
          type: number
          format: double
        agreedDiscounts:
          type: number
          format: double
        deliveryTerm:
          type: integer
          format: int32
        minimumOrder:
          type: string
        supplierPaymentMethod:
          $ref: '#/components/schemas/SupplierPaymentMethodProjection'
    PurchaseUnitProjection:
      type: object
      properties:
        id:
          type: integer
          format: int64
        purchaseUnit:
          type: string
        conversionFactor:
          type: number
          format: double
    SupplierContactProjection:
      type: object
      properties:
        name:
          type: string
        id:
          type: integer
          format: int64
        role:
          type: string
        email:
          type: string
        phoneNumber:
          type: string
    SupplierIdNameProjection:
      type: object
      properties:
        name:
          type: string
        id:
          type: integer
          format: int64
        externalId:
          type: string
    SupplierPaymentMethodProjection:
      type: object
      properties:
        name:
          type: string
        id:
          type: integer
          format: int64
        paymentDeadlineDays:
          type: integer
          format: int32
    SupplierProjection:
      type: object
      properties:
        name:
          type: string
        id:
          type: integer
          format: int64
        externalId:
          type: string
        articles:
          type: array
          items:
            $ref: '#/components/schemas/ArticleSuppliersProjection'
        website:
          type: string
        businessUnits:
          type: array
          items:
            $ref: '#/components/schemas/BusinessUnitIdNameProjection'
        catalogueLink:
          type: string
        paymentMethods:
          type: array
          items:
            $ref: '#/components/schemas/SupplierPaymentMethodProjection'
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/SupplierContactProjection'
    SupplierResponse:
      type: object
      properties:
        message:
          type: string
        status:
          type: string
          enum:
            - OK
            - ERROR
        data:
          $ref: '#/components/schemas/SupplierProjection'
    SupplierContactResponse:
      type: object
      properties:
        message:
          type: string
        status:
          type: string
          enum:
            - OK
            - ERROR
        data:
          $ref: '#/components/schemas/SupplierContactProjection'
    ArticleSuppliers:
      type: object
      properties:
        articleId:
          type: integer
          format: int64
        principal:
          type: boolean
        commercialTerm:
          $ref: '#/components/schemas/CommercialTerm'
        purchaseUnitId:
          type: integer
          format: int64
    CommercialTerm:
      required:
        - agreedDiscounts
        - cost
        - minimumOrder
      type: object
      properties:
        deliveryTerm:
          type: integer
          format: int32
        minimumOrder:
          type: string
        cost:
          type: number
          format: double
        agreedDiscounts:
          type: number
          format: double
        supplierPaymentMethodId:
          type: integer
          format: int64
    SupplierPaymentMethod:
      required:
        - name
        - paymentDeadlineDays
      type: object
      properties:
        name:
          type: string
        paymentDeadlineDays:
          type: integer
          format: int32
    SupplierPaymentMethodProjectionResponse:
      type: object
      properties:
        message:
          type: string
        status:
          type: string
          enum:
            - OK
            - ERROR
        data:
          $ref: '#/components/schemas/SupplierPaymentMethodProjection'
    RoleResponse:
      type: object
      properties:
        message:
          type: string
        status:
          type: string
          enum:
            - OK
            - ERROR
        data:
          type: integer
          format: int64
    ListRoleResponse:
      type: object
      properties:
        message:
          type: string
        status:
          type: string
          enum:
            - OK
            - ERROR
        data:
          type: array
          items:
            type: integer
            format: int64
    CreateRepositionOrderSku:
      type: object
      properties:
        skuId:
          type: integer
          format: int64
        quantity:
          type: integer
          format: int32
    EditRepositionOrder:
      type: object
      properties:
        branchOfficeOrDepositFromId:
          type: integer
          format: int64
        branchOfficeOrDepositFrom:
          type: string
          enum:
            - BRANCH_OFFICE
            - DEPOSIT
        branchOfficeOrDepositToId:
          type: integer
          format: int64
        branchOfficeOrDepositTo:
          type: string
          enum:
            - BRANCH_OFFICE
            - DEPOSIT
        estimatedDeliveryDate:
          type: string
          format: date
        skus:
          type: array
          items:
            $ref: '#/components/schemas/CreateRepositionOrderSku'
    AcceptedPaymentMethodWithOutBUProjection:
      type: object
      properties:
        name:
          type: string
        id:
          type: integer
          format: int64
        type:
          $ref: '#/components/schemas/AcceptedPaymentMethodTypeProjection'
        externalId:
          type: string
        feeRangeMax:
          type: integer
          format: int32
        feeRangeMin:
          type: integer
          format: int32
    ArticlePriceProjection:
      type: object
      properties:
        id:
          type: integer
          format: int64
        date:
          type: string
          format: date-time
        branchOffice:
          $ref: '#/components/schemas/BranchOfficeProjectionIdName'
        price:
          type: number
          format: double
    ArticleProjection:
      type: object
      properties:
        name:
          type: string
        id:
          type: integer
          format: int64
        currency:
          $ref: '#/components/schemas/CurrencyProjection'
        description:
          type: string
        externalId:
          type: string
        cost:
          type: number
          format: double
        defaultPrice:
          type: number
          format: double
        enable:
          type: boolean
        discontinued:
          type: boolean
        skus:
          type: array
          items:
            $ref: '#/components/schemas/SkuProjection'
        brand:
          $ref: '#/components/schemas/BrandProjection'
        suppliers:
          type: array
          items:
            $ref: '#/components/schemas/ArticleSuppliersWithoutArticleProjection'
        category:
          $ref: '#/components/schemas/CategoryProjection'
        prices:
          type: array
          items:
            $ref: '#/components/schemas/ArticlePriceProjection'
        roundingType:
          $ref: '#/components/schemas/RoundingTypeProjection'
        businessUnits:
          type: array
          items:
            $ref: '#/components/schemas/BusinessUnitIdNameProjection'
        stock:
          type: integer
          format: int32
        organization:
          $ref: '#/components/schemas/OrganizationProjection'
        actualPrices:
          type: array
          items:
            $ref: '#/components/schemas/ArticlePriceProjection'
        attributesWithValue:
          type: array
          items:
            $ref: '#/components/schemas/AttributeValueArticleProjection'
    ArticleSuppliersWithoutArticleProjection:
      type: object
      properties:
        id:
          type: integer
          format: int64
        principal:
          type: boolean
        supplier:
          $ref: '#/components/schemas/SupplierIdNameProjection'
        commercialTerm:
          $ref: '#/components/schemas/CommercialTermProjection'
        purchaseUnit:
          $ref: '#/components/schemas/PurchaseUnitProjection'
    AttributeEnumProjection:
      type: object
      properties:
        value:
          type: string
        id:
          type: integer
          format: int64
        attribute:
          $ref: '#/components/schemas/AttributeIdNameProjection'
    AttributeEnumWithoutAttributeProjection:
      type: object
      properties:
        value:
          type: string
        id:
          type: integer
          format: int64
    AttributeIdNameProjection:
      type: object
      properties:
        id:
          type: integer
          format: int64
        attribute:
          type: string
    AttributeProjection:
      type: object
      properties:
        id:
          type: integer
          format: int64
        attribute:
          type: string
        isEnum:
          type: boolean
        enums:
          type: array
          items:
            $ref: '#/components/schemas/AttributeEnumWithoutAttributeProjection'
        businessUnits:
          type: array
          items:
            $ref: '#/components/schemas/BusinessUnitIdNameProjection'
        organization:
          $ref: '#/components/schemas/OrganizationProjection'
    AttributeValueArticleProjection:
      type: object
      properties:
        value:
          type: string
        id:
          type: integer
          format: int64
        attribute:
          $ref: '#/components/schemas/AttributeProjection'
        valueEnum:
          $ref: '#/components/schemas/AttributeEnumProjection'
    AttributeValueSkuProjection:
      type: object
      properties:
        value:
          type: string
        id:
          type: integer
          format: int64
        attribute:
          $ref: '#/components/schemas/AttributeProjection'
        valueEnum:
          $ref: '#/components/schemas/AttributeEnumProjection'
    BranchOfficeProjection:
      type: object
      properties:
        name:
          type: string
        location:
          type: string
        id:
          type: integer
          format: int64
        type:
          type: string
          enum:
            - PHISIC
            - ECOMMERCE
        channel:
          $ref: '#/components/schemas/ChannelWithBusinessUnitProjection'
        url:
          type: string
        externalId:
          type: string
        roomSpace:
          type: number
          format: double
        priceVariation:
          type: number
          format: double
        exhibitionSpace:
          type: number
          format: double
        marketplace:
          type: string
        belongsShoppingCenter:
          type: boolean
        shoppingCenter:
          type: string
        priceRestriction:
          type: string
        restrictedCategories:
          type: array
          items:
            $ref: '#/components/schemas/CategoryProjection'
        restrictedArticles:
          type: array
          items:
            $ref: '#/components/schemas/ArticleProjection'
        restrictedAcceptedPaymentMethods:
          type: array
          items:
            $ref: '#/components/schemas/AcceptedPaymentMethodProjection'
        salePoints:
          type: array
          items:
            $ref: '#/components/schemas/SalePointProjectionWithoutBranchOffice'
        branchOfficeType:
          $ref: '#/components/schemas/JSONObject'
        businessUnit:
          type: array
          items:
            $ref: '#/components/schemas/JSONObject'
    BrandProjection:
      type: object
      properties:
        name:
          type: string
        id:
          type: integer
          format: int64
        description:
          type: string
        externalId:
          type: string
    CategoryProjection:
      type: object
      properties:
        name:
          type: string
        id:
          type: integer
          format: int64
        description:
          type: string
        externalId:
          type: string
        enable:
          type: boolean
        roundingType:
          $ref: '#/components/schemas/RoundingTypeProjection'
        father:
          $ref: '#/components/schemas/CategoryIdAndNameProjection'
        organization:
          $ref: '#/components/schemas/OrganizationProjection'
        bussinesUnits:
          type: array
          items:
            $ref: '#/components/schemas/BusinessUnitIdNameProjection'
        numberOfChilds:
          type: integer
          format: int32
    ChannelWithBusinessUnitProjection:
      type: object
      properties:
        id:
          type: integer
          format: int64
        type:
          $ref: '#/components/schemas/ChannelTypeProjection'
        currencies:
          type: array
          items:
            $ref: '#/components/schemas/CurrencyProjection'
        businessUnit:
          type: object
          properties:
            empty:
              type: boolean
          additionalProperties:
            type: object
    DepositIdNameProjection:
      type: object
      properties:
        name:
          type: string
        id:
          type: integer
          format: int64
        externalId:
          type: string
    DepositProjection:
      type: object
      properties:
        name:
          type: string
        id:
          type: integer
          format: int64
        address:
          type: string
        externalId:
          type: string
        skus:
          type: array
          items:
            $ref: '#/components/schemas/SkuDepositProjection'
        categories:
          type: array
          items:
            $ref: '#/components/schemas/CategoryProjection'
        branchOffices:
          type: array
          items:
            $ref: '#/components/schemas/BranchOfficeProjection'
        capacity:
          type: integer
          format: int32
        businessUnits:
          type: array
          items:
            $ref: '#/components/schemas/BusinessUnitIdNameProjection'
    OrganizationProjection:
      type: object
      properties:
        name:
          type: string
        id:
          type: integer
          format: int64
        realName:
          type: string
        address:
          type: string
        enabled:
          type: boolean
        businessName:
          type: string
        rut:
          type: string
    RepositionOrderProjection:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdDate:
          type: string
          format: date
        businessUnit:
          $ref: '#/components/schemas/BusinessUnitIdNameProjection'
        branchOfficeFrom:
          $ref: '#/components/schemas/BranchOfficeProjectionIdName'
        depositFrom:
          $ref: '#/components/schemas/DepositProjection'
        branchOfficeTo:
          $ref: '#/components/schemas/BranchOfficeProjectionIdName'
        depositTo:
          $ref: '#/components/schemas/DepositProjection'
        estimatedDeliveryDate:
          type: string
          format: date
        orderStatus:
          $ref: '#/components/schemas/JSONObject'
        skus:
          type: array
          properties:
            empty:
              type: boolean
          items:
            type: object
    RepositionOrderProjectionResponse:
      type: object
      properties:
        message:
          type: string
        status:
          type: string
          enum:
            - OK
            - ERROR
        data:
          $ref: '#/components/schemas/RepositionOrderProjection'
    RoundingTypeProjection:
      type: object
      properties:
        id:
          type: integer
          format: int64
        type:
          type: string
        descriptionEs:
          type: string
        descriptionEn:
          type: string
    SalePointProjectionWithoutBranchOffice:
      type: object
      properties:
        name:
          type: string
        id:
          type: integer
          format: int64
        acceptedPaymentMethods:
          type: array
          items:
            $ref: '#/components/schemas/AcceptedPaymentMethodWithOutBUProjection'
    SkuDepositProjection:
      type: object
      properties:
        id:
          type: integer
          format: int64
        sku:
          $ref: '#/components/schemas/SkuIdNameProjection'
        deposit:
          $ref: '#/components/schemas/DepositIdNameProjection'
        stock:
          type: integer
          format: int32
    SkuProjection:
      type: object
      properties:
        length:
          type: number
          format: double
        name:
          type: string
        id:
          type: integer
          format: int64
        externalId:
          type: string
        enable:
          type: boolean
        heightWithPackaging:
          type: number
          format: double
        lengthWithPackaging:
          type: number
          format: double
        widthWithPackaging:
          type: number
          format: double
        weightWithPackaging:
          type: number
          format: double
        height:
          type: number
          format: double
        width:
          type: number
          format: double
        weight:
          type: number
          format: double
        volumen:
          type: number
          format: double
        kit:
          type: boolean
        salesUnit:
          type: string
        storageUnit:
          type: string
        minimumStock:
          type: integer
          format: int32
        shoeSize:
          type: number
          format: double
        clothSizeOp1:
          type: integer
          format: int32
        clothSizeOp2:
          type: string
        colour:
          type: string
        brand:
          type: string
        flavour:
          type: string
        presentationVolumenM3:
          type: number
          format: double
        presentationTypeOfContainer:
          type: string
        variety:
          type: string
        detailedStock:
          $ref: '#/components/schemas/JSONObject'
        articleId:
          type: integer
          format: int64
        articleName:
          type: string
        totalStock:
          type: integer
          format: int32
        createdDate:
          type: string
          format: date-time
        attributesWithValue:
          type: array
          items:
            $ref: '#/components/schemas/AttributeValueSkuProjection'
        weightGrs:
          type: number
          format: double
    PurchaseUnit:
      type: object
      properties:
        purchaseUnit:
          type: string
        conversionFactor:
          type: number
          format: double
    PurchaseUnitResponse:
      type: object
      properties:
        message:
          type: string
        status:
          type: string
          enum:
            - OK
            - ERROR
        data:
          $ref: '#/components/schemas/PurchaseUnitProjection'
    CreatePurchaseOrderSku:
      required:
        - quantity
        - skuId
      type: object
      properties:
        skuId:
          type: integer
          format: int64
        quantity:
          type: integer
          format: int32
    EditPurchaseOrder:
      type: object
      properties:
        branchOfficeOrDeposit:
          type: string
          enum:
            - BRANCH_OFFICE
            - DEPOSIT
        branchOfficeOrDepositId:
          type: integer
          format: int64
        estimatedDeliveryDate:
          type: string
          format: date
        skus:
          type: array
          items:
            $ref: '#/components/schemas/CreatePurchaseOrderSku'
    PurchaseOrderProjection:
      type: object
      properties:
        id:
          type: integer
          format: int64
        supplier:
          $ref: '#/components/schemas/SupplierIdNameProjection'
        branchOffice:
          $ref: '#/components/schemas/BranchOfficeProjectionIdName'
        createdDate:
          type: string
          format: date
        deposit:
          $ref: '#/components/schemas/DepositProjection'
        estimatedDeliveryDate:
          type: string
          format: date
        orderOrigin:
          $ref: '#/components/schemas/JSONObject'
        purchaseOrderAnalysis:
          $ref: '#/components/schemas/JSONObject'
        notCompletedReason:
          type: string
        orderStatus:
          $ref: '#/components/schemas/JSONObject'
        skus:
          type: array
          properties:
            empty:
              type: boolean
          items:
            type: object
    PurchaseOrderProjectionResponse:
      type: object
      properties:
        message:
          type: string
        status:
          type: string
          enum:
            - OK
            - ERROR
        data:
          $ref: '#/components/schemas/PurchaseOrderProjection'
    LocalTime:
      type: object
      properties:
        hour:
          type: integer
          format: int32
        minute:
          type: integer
          format: int32
        second:
          type: integer
          format: int32
        nano:
          type: integer
          format: int32
    Promotion:
      required:
        - accumulateOtherPromotions
        - distributeLines
        - name
        - recurrence
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        recurrence:
          $ref: '#/components/schemas/Recurrence'
        clientSegmentIds:
          type: array
          items:
            type: integer
            format: int64
        branchOfficeIds:
          type: array
          items:
            type: integer
            format: int64
        brandIds:
          type: array
          items:
            type: integer
            format: int64
        categoryIds:
          type: array
          items:
            type: integer
            format: int64
        acceptedPaymentMethodIds:
          type: array
          items:
            type: integer
            format: int64
        quantityPerBranchOffice:
          type: integer
          format: int32
        quantityPerClient:
          type: integer
          format: int32
        quantityPerArticle:
          type: integer
          format: int32
        accumulateOtherPromotions:
          type: boolean
        minimumTicket:
          type: number
          format: double
        maximumTicket:
          type: number
          format: double
        quantityApplications:
          type: integer
          format: int32
        distributeLines:
          type: boolean
        binRangeMax:
          type: integer
          format: int32
        binRangeMin:
          type: integer
          format: int32
        bines:
          type: array
          items:
            type: integer
            format: int32
    Recurrence:
      type: object
      properties:
        type:
          type: string
          enum:
            - WEEKLY
            - MONTHLY
            - ANUALLY
        monday:
          type: boolean
        tuesday:
          type: boolean
        wednesday:
          type: boolean
        thursday:
          type: boolean
        friday:
          type: boolean
        saturday:
          type: boolean
        sunday:
          type: boolean
        dayMonthly:
          type: integer
          format: int32
        dayAnually:
          type: string
          format: date
        startTime:
          $ref: '#/components/schemas/LocalTime'
        endTime:
          $ref: '#/components/schemas/LocalTime'
        repeatInterval:
          type: integer
          format: int32
    RegularPromotion:
      required:
        - promotion
        - regularPromotionType
        - skuIds
      type: object
      properties:
        promotion:
          $ref: '#/components/schemas/Promotion'
        regularPromotionType:
          type: string
          enum:
            - NOMINAL
            - NOMINAL_SENT
            - PERCENTAGE
            - MAX_PRICE_PER_ARTICLE
            - PERCENTAGE_SENT
            - FREE_SHIPPING
            - GIFT
            - NOMINAL_DISCOUNT
            - PRICE_TABLE
        skuIds:
          type: array
          items:
            type: integer
            format: int64
        discountValue:
          type: number
          format: double
        discountPercent:
          type: number
          format: double
        giftId:
          type: integer
          format: int64
    BuyOneGetOnePromotionProjection:
      type: object
      properties:
        id:
          type: integer
          format: int64
        skus:
          type: array
          items:
            $ref: '#/components/schemas/SkuIdNameProjection'
        bogopromotionType:
          $ref: '#/components/schemas/JSONObject'
        gift:
          $ref: '#/components/schemas/SkuIdNameProjection'
    BuyTogetherPromotionProjection:
      type: object
      properties:
        id:
          type: integer
          format: int64
        discountFirstList:
          type: number
          format: double
        discountSecondList:
          type: number
          format: double
        firstList:
          type: array
          items:
            $ref: '#/components/schemas/SkuIdNameProjection'
        secondList:
          type: array
          items:
            $ref: '#/components/schemas/SkuIdNameProjection'
    ClientSegmentOnlyNameProjection:
      type: object
      properties:
        name:
          type: string
        id:
          type: integer
          format: int64
    MxnPromotionProjection:
      type: object
      properties:
        id:
          type: integer
          format: int64
        skus:
          type: array
          items:
            $ref: '#/components/schemas/SkuIdNameProjection'
        discountPercent:
          type: number
          format: double
        quantityForPromotion:
          type: integer
          format: int32
        quantityWithDiscount:
          type: integer
          format: int32
        allProducts:
          type: boolean
        highPrice:
          type: boolean
        forTotalArticles:
          type: boolean
    ProgressiveDiscountPromotionLineProjection:
      type: object
      properties:
        id:
          type: integer
          format: int64
        quantity:
          type: integer
          format: int32
        discount:
          type: number
          format: double
    ProgressiveDiscountPromotionProjection:
      type: object
      properties:
        id:
          type: integer
          format: int64
        skus:
          type: array
          items:
            $ref: '#/components/schemas/SkuIdNameProjection'
        lines:
          type: array
          items:
            $ref: '#/components/schemas/ProgressiveDiscountPromotionLineProjection'
    PromotionBinProjection:
      type: object
      properties:
        id:
          type: integer
          format: int64
        bin:
          type: integer
          format: int32
    PromotionProjection:
      type: object
      properties:
        name:
          type: string
        id:
          type: integer
          format: int64
        description:
          type: string
        categories:
          type: array
          items:
            $ref: '#/components/schemas/CategoryIdAndNameProjection'
        branchOffices:
          type: array
          items:
            $ref: '#/components/schemas/BranchOfficeProjectionIdName'
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        brands:
          type: array
          items:
            $ref: '#/components/schemas/BrandProjection'
        acceptedPaymentMethods:
          type: array
          items:
            $ref: '#/components/schemas/AcceptedPaymentMethodProjection'
        recurrence:
          $ref: '#/components/schemas/RecurrenceProjection'
        quantityApplications:
          type: integer
          format: int32
        quantityPerBranchOffice:
          type: integer
          format: int32
        quantityPerClient:
          type: integer
          format: int32
        quantityPerArticle:
          type: integer
          format: int32
        minimumTicket:
          type: number
          format: double
        maximumTicket:
          type: number
          format: double
        accumulateOtherPromotions:
          type: boolean
        distributeLines:
          type: boolean
        binRangeMax:
          type: integer
          format: int32
        binRangeMin:
          type: integer
          format: int32
        bines:
          type: array
          items:
            $ref: '#/components/schemas/PromotionBinProjection'
        clientSegments:
          type: array
          items:
            $ref: '#/components/schemas/ClientSegmentOnlyNameProjection'
        regularPromotion:
          $ref: '#/components/schemas/RegularPromotionProjection'
        buyTogetherPromotion:
          $ref: '#/components/schemas/BuyTogetherPromotionProjection'
        mxnPromotion:
          $ref: '#/components/schemas/MxnPromotionProjection'
        buyOneGetOnePromotion:
          $ref: '#/components/schemas/BuyOneGetOnePromotionProjection'
        progressiveDiscountPromotion:
          $ref: '#/components/schemas/ProgressiveDiscountPromotionProjection'
        startDay:
          type: string
          format: date
        endDay:
          type: string
          format: date
        type:
          type: object
          properties:
            empty:
              type: boolean
          additionalProperties:
            type: object
        status:
          $ref: '#/components/schemas/JSONObject'
        origin:
          $ref: '#/components/schemas/JSONObject'
    PromotionProjectionResponse:
      type: object
      properties:
        message:
          type: string
        status:
          type: string
          enum:
            - OK
            - ERROR
        data:
          $ref: '#/components/schemas/PromotionProjection'
    RecurrenceProjection:
      type: object
      properties:
        id:
          type: integer
          format: int64
        endTime:
          $ref: '#/components/schemas/LocalTime'
        startTime:
          $ref: '#/components/schemas/LocalTime'
        monday:
          type: boolean
        tuesday:
          type: boolean
        wednesday:
          type: boolean
        thursday:
          type: boolean
        friday:
          type: boolean
        saturday:
          type: boolean
        sunday:
          type: boolean
        dayMonthly:
          type: integer
          format: int32
        dayAnually:
          type: string
          format: date
        repeatInterval:
          type: integer
          format: int32
        type:
          type: object
          properties:
            empty:
              type: boolean
          additionalProperties:
            type: object
    RegularPromotionProjection:
      type: object
      properties:
        id:
          type: integer
          format: int64
        skus:
          type: array
          items:
            $ref: '#/components/schemas/SkuIdNameProjection'
        discountValue:
          type: number
          format: double
        discountPercent:
          type: number
          format: double
        gift:
          $ref: '#/components/schemas/SkuIdNameProjection'
        type:
          type: object
          properties:
            empty:
              type: boolean
          additionalProperties:
            type: object
    ProgressiveDiscountPromotion:
      required:
        - lines
        - promotion
        - skuIds
      type: object
      properties:
        promotion:
          $ref: '#/components/schemas/Promotion'
        skuIds:
          type: array
          items:
            type: integer
            format: int64
        lines:
          type: array
          items:
            $ref: '#/components/schemas/ProgressiveDiscountPromotionLine'
    ProgressiveDiscountPromotionLine:
      type: object
      properties:
        quantity:
          type: integer
          format: int32
        discount:
          type: number
          format: double
    MxnPromotion:
      required:
        - allProducts
        - discountPercent
        - forTotalArticles
        - highPrice
        - promotion
        - quantityForPromotion
        - quantityWithDiscount
        - skuIds
      type: object
      properties:
        promotion:
          $ref: '#/components/schemas/Promotion'
        quantityForPromotion:
          type: integer
          format: int32
        quantityWithDiscount:
          type: integer
          format: int32
        discountPercent:
          type: number
          format: double
        allProducts:
          type: boolean
        highPrice:
          type: boolean
        forTotalArticles:
          type: boolean
        skuIds:
          type: array
          items:
            type: integer
            format: int64
    BuyTogetherPromotion:
      required:
        - discountFirstList
        - discountSecondList
        - promotion
        - skuIdFirstList
        - skuIdSecondList
      type: object
      properties:
        promotion:
          $ref: '#/components/schemas/Promotion'
        discountFirstList:
          type: number
          format: double
        discountSecondList:
          type: number
          format: double
        skuIdFirstList:
          type: array
          items:
            type: integer
            format: int64
        skuIdSecondList:
          type: array
          items:
            type: integer
            format: int64
    BuyOneGetOnePromotion:
      required:
        - giftId
        - promotion
        - type
      type: object
      properties:
        promotion:
          $ref: '#/components/schemas/Promotion'
        type:
          type: string
          enum:
            - GIFT
            - FREE_SHIPPING
            - MAX_PRICE_PER_ARTICLE
        giftId:
          type: integer
          format: int64
        skuIds:
          type: array
          items:
            type: integer
            format: int64
    PromotionTypeProjection:
      type: object
      properties:
        name:
          type: string
        id:
          type: integer
          format: int64
        code:
          type: string
    PromotionTypeProjectionResponse:
      type: object
      properties:
        message:
          type: string
        status:
          type: string
          enum:
            - OK
            - ERROR
        data:
          $ref: '#/components/schemas/PromotionTypeProjection'
    Pricing:
      required:
        - endPrice
        - name
        - pricingTypeId
      type: object
      properties:
        name:
          type: string
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        percent:
          type: boolean
        endPrice:
          type: string
          enum:
            - BACK_TO_DEFAULT
            - KEEP_THIS_PRICE
            - NEW_PRICE
        newPrice:
          type: number
          format: double
        value:
          type: number
          format: double
        pricingTypeId:
          type: integer
          format: int64
        articlesIds:
          type: array
          items:
            type: integer
            format: int64
        branchOfficeIds:
          type: array
          items:
            type: integer
            format: int64
        categoryIds:
          type: array
          items:
            type: integer
            format: int64
        allConditions:
          type: boolean
    PricingProjection:
      type: object
      properties:
        name:
          type: string
        value:
          type: number
          format: double
        id:
          type: integer
          format: int64
        percent:
          type: boolean
        articles:
          type: array
          items:
            $ref: '#/components/schemas/ArticleIdNameProjection'
        categories:
          type: array
          items:
            $ref: '#/components/schemas/CategoryIdAndNameProjection'
        allConditions:
          type: boolean
        branchOffices:
          type: array
          items:
            $ref: '#/components/schemas/BranchOfficeProjectionIdName'
        newPrice:
          type: number
          format: double
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        pricingType:
          $ref: '#/components/schemas/PricingTypeProjection'
        startDay:
          type: string
          format: date
        organization:
          $ref: '#/components/schemas/OrganizationProjection'
        pricingOrigin:
          type: object
          properties:
            empty:
              type: boolean
          additionalProperties:
            type: object
        pricingAnalysis:
          type: object
          properties:
            empty:
              type: boolean
          additionalProperties:
            type: object
        endDay:
          type: string
          format: date
        status:
          $ref: '#/components/schemas/JSONObject'
        endPrice:
          $ref: '#/components/schemas/JSONObject'
    PricingProjectionResponse:
      type: object
      properties:
        message:
          type: string
        status:
          type: string
          enum:
            - OK
            - ERROR
        data:
          $ref: '#/components/schemas/PricingProjection'
    PricingTypeProjection:
      type: object
      properties:
        id:
          type: integer
          format: int64
        description:
          type: string
        code:
          type: string
    PricingTypeProjectionResponse:
      type: object
      properties:
        message:
          type: string
        status:
          type: string
          enum:
            - OK
            - ERROR
        data:
          $ref: '#/components/schemas/PricingTypeProjection'
    Organization:
      type: object
      properties:
        realName:
          type: string
        businessName:
          type: string
        rut:
          type: string
        address:
          type: string
    OrganizationEntity:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        enabled:
          type: boolean
        realName:
          type: string
        businessName:
          type: string
        rut:
          type: string
        address:
          type: string
    OrganizationEntityResponse:
      type: object
      properties:
        message:
          type: string
        status:
          type: string
          enum:
            - OK
            - ERROR
        data:
          $ref: '#/components/schemas/OrganizationEntity'
    Deposit:
      required:
        - capacity
        - name
      type: object
      properties:
        externalId:
          type: string
        name:
          type: string
        capacity:
          type: number
          format: double
        address:
          type: string
        branchOfficesIds:
          type: array
          items:
            type: integer
            format: int64
        businessUnitsIds:
          type: array
          items:
            type: integer
            format: int64
        categoriesIds:
          type: array
          items:
            type: integer
            format: int64
    DepositProjectionResponse:
      type: object
      properties:
        message:
          type: string
        status:
          type: string
          enum:
            - OK
            - ERROR
        data:
          $ref: '#/components/schemas/DepositProjection'
    StockUpdateRequest:
      type: object
      properties:
        skuBranchOfficeOrDepositId:
          type: integer
          format: int64
        stock:
          type: integer
          format: int32
    ListDepositProjectionResponse:
      type: object
      properties:
        message:
          type: string
        status:
          type: string
          enum:
            - OK
            - ERROR
        data:
          type: array
          items:
            $ref: '#/components/schemas/SkuDepositProjection'
    SkuDepositProjectionResponse:
      type: object
      properties:
        message:
          type: string
        status:
          type: string
          enum:
            - OK
            - ERROR
        data:
          $ref: '#/components/schemas/SkuDepositProjection'
    CompetitorProjection:
      type: object
      properties:
        name:
          type: string
        id:
          type: integer
          format: int64
        externalId:
          type: string
        articles:
          type: array
          items:
            $ref: '#/components/schemas/ArticleIdNameProjection'
        website:
          type: string
    CompetitorProjectionResponse:
      type: object
      properties:
        message:
          type: string
        status:
          type: string
          enum:
            - OK
            - ERROR
        data:
          $ref: '#/components/schemas/CompetitorProjection'
    ClientProjection:
      type: object
      properties:
        name:
          type: string
        id:
          type: integer
          format: int64
        state:
          $ref: '#/components/schemas/StateWithoutCountryProjection'
        address:
          type: string
        country:
          $ref: '#/components/schemas/CountryProjection'
        email:
          type: string
        lastname:
          type: string
        birthdate:
          type: string
          format: date
        telephone:
          type: string
        idType:
          $ref: '#/components/schemas/IdTypeProjection'
        idNumber:
          type: string
        locality:
          type: string
        fidelity:
          type: string
        cellphone:
          type: string
        sex:
          type: object
          properties:
            empty:
              type: boolean
          additionalProperties:
            type: object
    ClientProjectionResponse:
      type: object
      properties:
        message:
          type: string
        status:
          type: string
          enum:
            - OK
            - ERROR
        data:
          $ref: '#/components/schemas/ClientProjection'
    CountryProjection:
      type: object
      properties:
        name:
          type: string
        id:
          type: integer
          format: int64
        iso2:
          type: string
        emoji:
          type: string
        iso3:
          type: string
    IdTypeProjection:
      type: object
      properties:
        id:
          type: integer
          format: int64
        type:
          type: string
        descriptionEs:
          type: string
        descriptionEn:
          type: string
    StateWithoutCountryProjection:
      type: object
      properties:
        name:
          type: string
        id:
          type: integer
          format: int64
    ClientSegmentProjection:
      type: object
      properties:
        name:
          type: string
        id:
          type: integer
          format: int64
        maxAge:
          type: integer
          format: int32
        description:
          type: string
        articles:
          type: array
          items:
            $ref: '#/components/schemas/ArticleIdNameProjection'
        categories:
          type: array
          items:
            $ref: '#/components/schemas/CategoryIdAndNameProjection'
        branchOffices:
          type: array
          items:
            $ref: '#/components/schemas/BranchOfficeProjectionIdName'
        minAge:
          type: integer
          format: int32
        countries:
          type: array
          items:
            $ref: '#/components/schemas/CountryProjection'
        states:
          type: array
          items:
            $ref: '#/components/schemas/StateWithoutCountryProjection'
        brands:
          type: array
          items:
            $ref: '#/components/schemas/BrandProjection'
        sex:
          type: object
          properties:
            empty:
              type: boolean
          additionalProperties:
            type: object
        type:
          $ref: '#/components/schemas/JSONObject'
    ClientSegmentProjectionResponse:
      type: object
      properties:
        message:
          type: string
        status:
          type: string
          enum:
            - OK
            - ERROR
        data:
          $ref: '#/components/schemas/ClientSegmentProjection'
    Category:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        fatherId:
          type: integer
          format: int64
        enable:
          type: boolean
        roundingType:
          $ref: '#/components/schemas/RoundingTypeEntity'
        organization:
          $ref: '#/components/schemas/OrganizationEntity'
    CategoryResponse:
      type: object
      properties:
        message:
          type: string
        status:
          type: string
          enum:
            - OK
            - ERROR
        data:
          $ref: '#/components/schemas/Category'
    RoundingTypeEntity:
      type: object
      properties:
        id:
          type: integer
          format: int64
        type:
          type: string
        descriptionEn:
          type: string
        descriptionEs:
          type: string
    BusinessUnit:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        language:
          $ref: '#/components/schemas/LanguageEntity'
        defaultCurrency:
          $ref: '#/components/schemas/CurrencyEntity'
        channels:
          type: array
          items:
            $ref: '#/components/schemas/Channel'
    BusinessUnitResponse:
      type: object
      properties:
        message:
          type: string
        status:
          type: string
          enum:
            - OK
            - ERROR
        data:
          $ref: '#/components/schemas/BusinessUnit'
    Channel:
      type: object
      properties:
        id:
          type: integer
          format: int64
        type:
          $ref: '#/components/schemas/ChannelTypeEntity'
        currencies:
          type: array
          items:
            $ref: '#/components/schemas/CurrencyEntity'
        url:
          type: string
    ChannelTypeEntity:
      type: object
      properties:
        id:
          type: integer
          format: int64
        type:
          type: string
        descriptionEn:
          type: string
        descriptionEs:
          type: string
    CurrencyEntity:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        shortName:
          type: string
    LanguageEntity:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        shortName:
          type: string
    AcceptedPaymentMethodEntity:
      type: object
      properties:
        id:
          type: integer
          format: int64
        externalId:
          type: string
        name:
          type: string
        type:
          $ref: '#/components/schemas/AcceptedPaymentMethodTypeEntity'
        feeRangeMin:
          type: integer
          format: int32
        feeRangeMax:
          type: integer
          format: int32
        businessUnits:
          type: array
          items:
            $ref: '#/components/schemas/BusinessUnitEntity'
        branchOfficesRestricted:
          type: array
          items:
            $ref: '#/components/schemas/BranchOfficeEntity'
        salePoints:
          type: array
          items:
            $ref: '#/components/schemas/SalePointEntity'
        organization:
          $ref: '#/components/schemas/OrganizationEntity'
    AcceptedPaymentMethodTypeEntity:
      type: object
      properties:
        id:
          type: integer
          format: int64
        type:
          type: string
        descriptionEn:
          type: string
        descriptionEs:
          type: string
    ArticleEntity:
      type: object
      properties:
        id:
          type: integer
          format: int64
        externalId:
          type: string
        name:
          type: string
        description:
          type: string
        category:
          $ref: '#/components/schemas/CategoryEntity'
        brand:
          $ref: '#/components/schemas/BrandEntity'
        cost:
          minimum: 0
          type: number
          format: double
        defaultPrice:
          minimum: 0
          type: number
          format: double
        prices:
          type: array
          items:
            $ref: '#/components/schemas/ArticlePriceEntity'
        currency:
          $ref: '#/components/schemas/CurrencyEntity'
        roundingType:
          $ref: '#/components/schemas/RoundingTypeEntity'
        enable:
          type: boolean
        skus:
          type: array
          items:
            $ref: '#/components/schemas/SkuEntity'
        attributesWithValue:
          type: array
          items:
            $ref: '#/components/schemas/AttributeValueArticleEntity'
        suppliers:
          type: array
          items:
            $ref: '#/components/schemas/ArticleSuppliersEntity'
        stock:
          type: integer
          format: int32
        quantityInPurchaseOrder:
          type: integer
          format: int32
        businessUnits:
          type: array
          items:
            $ref: '#/components/schemas/BusinessUnitEntity'
        discontinued:
          type: boolean
        organization:
          $ref: '#/components/schemas/OrganizationEntity'
        skusNameAndId:
          type: array
          properties:
            empty:
              type: boolean
          items:
            type: object
        actualPrices:
          type: array
          items:
            $ref: '#/components/schemas/ArticlePriceEntity'
    ArticlePriceEntity:
      type: object
      properties:
        id:
          type: integer
          format: int64
        article:
          $ref: '#/components/schemas/ArticleEntity'
        price:
          type: number
          format: double
        branchOffice:
          $ref: '#/components/schemas/BranchOfficeEntity'
        date:
          type: string
          format: date-time
    ArticleSuppliersEntity:
      type: object
      properties:
        id:
          type: integer
          format: int64
        article:
          $ref: '#/components/schemas/ArticleEntity'
        supplier:
          $ref: '#/components/schemas/SupplierEntity'
        principal:
          type: boolean
        commercialTerm:
          $ref: '#/components/schemas/CommercialTermEntity'
        purchaseUnit:
          $ref: '#/components/schemas/PurchaseUnitEntity'
    AttributeEntity:
      type: object
      properties:
        id:
          type: integer
          format: int64
        attribute:
          type: string
        businessUnits:
          type: array
          items:
            $ref: '#/components/schemas/BusinessUnitEntity'
        isEnum:
          type: boolean
        enums:
          type: array
          items:
            $ref: '#/components/schemas/AttributeEnumEntity'
        organization:
          $ref: '#/components/schemas/OrganizationEntity'
    AttributeEnumEntity:
      type: object
      properties:
        id:
          type: integer
          format: int64
        attribute:
          $ref: '#/components/schemas/AttributeEntity'
        value:
          type: string
    AttributeValueArticleEntity:
      type: object
      properties:
        id:
          type: integer
          format: int64
        article:
          $ref: '#/components/schemas/ArticleEntity'
        attribute:
          $ref: '#/components/schemas/AttributeEntity'
        value:
          type: string
        valueEnum:
          $ref: '#/components/schemas/AttributeEnumEntity'
    AttributeValueSkuEntity:
      type: object
      properties:
        id:
          type: integer
          format: int64
        sku:
          $ref: '#/components/schemas/SkuEntity'
        attribute:
          $ref: '#/components/schemas/AttributeEntity'
        value:
          type: string
        valueEnum:
          $ref: '#/components/schemas/AttributeEnumEntity'
    BranchOfficeEntity:
      type: object
      properties:
        id:
          type: integer
          format: int64
        externalId:
          type: string
        name:
          type: string
        type:
          type: string
          enum:
            - PHISIC
            - ECOMMERCE
        location:
          type: string
        url:
          type: string
        roomSpace:
          type: number
          format: double
        priceVariation:
          type: number
          format: double
        exhibitionSpace:
          type: number
          format: double
        marketplace:
          type: string
        belongsShoppingCenter:
          type: boolean
        shoppingCenter:
          type: string
        priceRestriction:
          type: string
        businessUnits:
          type: array
          items:
            $ref: '#/components/schemas/BusinessUnitEntity'
        channel:
          $ref: '#/components/schemas/ChannelEntity'
        salePoints:
          type: array
          items:
            $ref: '#/components/schemas/SalePointEntity'
        desposits:
          type: array
          items:
            $ref: '#/components/schemas/DepositEntity'
        restrictedCategories:
          type: array
          items:
            $ref: '#/components/schemas/CategoryEntity'
        restrictedArticles:
          type: array
          items:
            $ref: '#/components/schemas/ArticleEntity'
        restrictedAcceptedPaymentMethods:
          type: array
          items:
            $ref: '#/components/schemas/AcceptedPaymentMethodEntity'
        skus:
          type: array
          items:
            $ref: '#/components/schemas/SkuBranchOfficeEntity'
        organization:
          $ref: '#/components/schemas/OrganizationEntity'
        branchOfficeType:
          type: object
          properties:
            empty:
              type: boolean
          additionalProperties:
            type: object
        businessUnitsIdAndName:
          type: array
          items:
            $ref: '#/components/schemas/JSONObject'
    BrandEntity:
      type: object
      properties:
        id:
          type: integer
          format: int64
        externalId:
          type: string
        name:
          type: string
        description:
          type: string
        organization:
          $ref: '#/components/schemas/OrganizationEntity'
    BusinessUnitEntity:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        language:
          $ref: '#/components/schemas/LanguageEntity'
        channels:
          type: array
          items:
            $ref: '#/components/schemas/ChannelEntity'
        defaultCurrency:
          $ref: '#/components/schemas/CurrencyEntity'
        organization:
          $ref: '#/components/schemas/OrganizationEntity'
        branchOffices:
          type: array
          items:
            $ref: '#/components/schemas/BranchOfficeEntity'
    CategoryEntity:
      type: object
      properties:
        id:
          type: integer
          format: int64
        externalId:
          type: string
        name:
          type: string
        description:
          type: string
        father:
          $ref: '#/components/schemas/CategoryEntity'
        enable:
          type: boolean
        roundingType:
          $ref: '#/components/schemas/RoundingTypeEntity'
        bussinesUnits:
          type: array
          items:
            $ref: '#/components/schemas/BusinessUnitEntity'
        numberOfChilds:
          type: integer
          format: int32
        organization:
          $ref: '#/components/schemas/OrganizationEntity'
        fatherId:
          type: integer
          format: int64
    ChannelEntity:
      type: object
      properties:
        id:
          type: integer
          format: int64
        type:
          $ref: '#/components/schemas/ChannelTypeEntity'
        businessUnit:
          $ref: '#/components/schemas/BusinessUnitEntity'
        currencies:
          type: array
          items:
            $ref: '#/components/schemas/CurrencyEntity'
        businessUnitIdName:
          type: object
          properties:
            empty:
              type: boolean
          additionalProperties:
            type: object
    ChannelResponse:
      type: object
      properties:
        message:
          type: string
        status:
          type: string
          enum:
            - OK
            - ERROR
        data:
          $ref: '#/components/schemas/ChannelEntity'
    CommercialTermEntity:
      type: object
      properties:
        id:
          type: integer
          format: int64
        deliveryTerm:
          type: integer
          format: int32
        minimumOrder:
          type: string
        cost:
          type: number
          format: double
        agreedDiscounts:
          type: number
          format: double
        supplierPaymentMethod:
          $ref: '#/components/schemas/SupplierPaymentMethodEntity'
    DepositEntity:
      type: object
      properties:
        id:
          type: integer
          format: int64
        externalId:
          type: string
        name:
          type: string
        capacity:
          type: number
          format: double
        branchOffices:
          type: array
          items:
            $ref: '#/components/schemas/BranchOfficeEntity'
        skus:
          type: array
          items:
            $ref: '#/components/schemas/SkuDepositEntity'
        businessUnits:
          type: array
          items:
            $ref: '#/components/schemas/BusinessUnitEntity'
        address:
          type: string
        categories:
          type: array
          items:
            $ref: '#/components/schemas/CategoryEntity'
        organization:
          $ref: '#/components/schemas/OrganizationEntity'
    PurchaseUnitEntity:
      type: object
      properties:
        id:
          type: integer
          format: int64
        purchaseUnit:
          type: string
        conversionFactor:
          type: number
          format: double
        organization:
          $ref: '#/components/schemas/OrganizationEntity'
    SalePointEntity:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        branchOffice:
          $ref: '#/components/schemas/BranchOfficeEntity'
        acceptedPaymentMethods:
          type: array
          items:
            $ref: '#/components/schemas/AcceptedPaymentMethodEntity'
        branchOfficeInfo:
          type: object
          properties:
            empty:
              type: boolean
          additionalProperties:
            type: object
    SkuBranchOfficeEntity:
      type: object
      properties:
        id:
          type: integer
          format: int64
        sku:
          $ref: '#/components/schemas/SkuEntity'
        branchOffice:
          $ref: '#/components/schemas/BranchOfficeEntity'
        stock:
          type: integer
          format: int32
        unsupply:
          type: boolean
    SkuDepositEntity:
      type: object
      properties:
        id:
          type: integer
          format: int64
        sku:
          $ref: '#/components/schemas/SkuEntity'
        deposit:
          $ref: '#/components/schemas/DepositEntity'
        stock:
          type: integer
          format: int32
    SkuEntity:
      type: object
      properties:
        id:
          type: integer
          format: int64
        externalId:
          type: string
        article:
          $ref: '#/components/schemas/ArticleEntity'
        name:
          type: string
        enable:
          type: boolean
        heightWithPackaging:
          minimum: 0
          type: number
          format: double
        lengthWithPackaging:
          minimum: 0
          type: number
          format: double
        widthWithPackaging:
          minimum: 0
          type: number
          format: double
        weightWithPackaging:
          minimum: 0
          type: number
          format: double
        height:
          minimum: 0
          type: number
          format: double
        length:
          minimum: 0
          type: number
          format: double
        width:
          minimum: 0
          type: number
          format: double
        weight:
          minimum: 0
          type: number
          format: double
        weightGrs:
          type: number
          format: double
        volumen:
          minimum: 0
          type: number
          format: double
        kit:
          type: boolean
        createdDate:
          type: string
          format: date-time
        salesUnit:
          type: string
        storageUnit:
          type: string
        minimumStock:
          minimum: 0
          type: integer
          format: int32
        attributesWithValue:
          type: array
          items:
            $ref: '#/components/schemas/AttributeValueSkuEntity'
        deposits:
          type: array
          items:
            $ref: '#/components/schemas/SkuDepositEntity'
        branchOffices:
          type: array
          items:
            $ref: '#/components/schemas/SkuBranchOfficeEntity'
        totalStock:
          type: integer
          format: int32
        quantityInPurchaseOrders:
          type: integer
          format: int32
        quantityInRepositionOrders:
          type: integer
          format: int32
        shoeSize:
          type: number
          format: double
        clothSizeOp1:
          type: integer
          format: int32
        clothSizeOp2:
          type: string
        colour:
          type: string
        brand:
          type: string
        flavour:
          type: string
        presentationVolumenM3:
          type: number
          format: double
        presentationTypeOfContainer:
          type: string
        variety:
          type: string
        category:
          $ref: '#/components/schemas/CategoryEntity'
        detailedStock:
          type: object
          properties:
            empty:
              type: boolean
          additionalProperties:
            type: object
        articleId:
          type: integer
          format: int64
        articleName:
          type: string
    SupplierContactEntity:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        phoneNumber:
          type: string
        email:
          type: string
        role:
          type: string
        supplier:
          $ref: '#/components/schemas/SupplierEntity'
    SupplierEntity:
      type: object
      properties:
        id:
          type: integer
          format: int64
        externalId:
          type: string
        name:
          type: string
        website:
          type: string
        catalogueLink:
          type: string
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/SupplierContactEntity'
        articles:
          type: array
          items:
            $ref: '#/components/schemas/ArticleSuppliersEntity'
        businessUnits:
          type: array
          items:
            $ref: '#/components/schemas/BusinessUnitEntity'
        paymentMethods:
          type: array
          items:
            $ref: '#/components/schemas/SupplierPaymentMethodEntity'
        organization:
          $ref: '#/components/schemas/OrganizationEntity'
    SupplierPaymentMethodEntity:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        paymentDeadlineDays:
          type: integer
          format: int32
        organization:
          $ref: '#/components/schemas/OrganizationEntity'
    BrandProjectionResponse:
      type: object
      properties:
        message:
          type: string
        status:
          type: string
          enum:
            - OK
            - ERROR
        data:
          $ref: '#/components/schemas/BrandProjection'
    BranchOffice:
      required:
        - belongsShoppingCenter
        - name
        - type
      type: object
      properties:
        externalId:
          type: string
        name:
          type: string
        type:
          $ref: '#/components/schemas/BranchOfficeType'
        location:
          type: string
        url:
          type: string
        roomSpace:
          type: number
          format: double
        priceVariation:
          type: number
          format: double
        exhibitionSpace:
          type: number
          format: double
        marketplace:
          type: string
        belongsShoppingCenter:
          type: boolean
        shoppingCenter:
          type: string
        priceRestriction:
          type: string
        businessUnitsIds:
          type: array
          items:
            type: integer
            format: int64
        restrictedCategoriesIds:
          type: array
          items:
            type: integer
            format: int64
        restrictedArticlesIds:
          type: array
          items:
            type: integer
            format: int64
        restrictedAcceptedPaymentMethodsIds:
          type: array
          items:
            type: integer
            format: int64
        channelId:
          type: integer
          format: int64
    BranchOfficeType:
      type: string
      enum:
        - PHISIC
        - ECOMMERCE
    BranchOfficeResponse:
      type: object
      properties:
        message:
          type: string
        status:
          type: string
          enum:
            - OK
            - ERROR
        data:
          $ref: '#/components/schemas/BranchOfficeProjection'
    SalePointToModify:
      type: object
      properties:
        name:
          type: string
        acceptedPaymentMethodsIds:
          type: array
          items:
            type: integer
            format: int64
    SalePointProjection:
      type: object
      properties:
        name:
          type: string
        id:
          type: integer
          format: int64
        branchOffice:
          $ref: '#/components/schemas/BranchOfficeProjection'
        acceptedPaymentMethods:
          type: array
          items:
            $ref: '#/components/schemas/AcceptedPaymentMethodProjection'
    SalePointProjectionResponse:
      type: object
      properties:
        message:
          type: string
        status:
          type: string
          enum:
            - OK
            - ERROR
        data:
          $ref: '#/components/schemas/SalePointProjection'
    ListSkuBranchOfficeProjectionResponse:
      type: object
      properties:
        message:
          type: string
        status:
          type: string
          enum:
            - OK
            - ERROR
        data:
          type: array
          items:
            $ref: '#/components/schemas/SkuBranchOfficeProjection'
    SkuBranchOfficeProjection:
      type: object
      properties:
        id:
          type: integer
          format: int64
        branchOffice:
          $ref: '#/components/schemas/BranchOfficeProjectionIdName'
        sku:
          $ref: '#/components/schemas/SkuIdNameProjection'
        stock:
          type: integer
          format: int32
        unsupply:
          type: boolean
    SkuBranchOfficeProjectionResponse:
      type: object
      properties:
        message:
          type: string
        status:
          type: string
          enum:
            - OK
            - ERROR
        data:
          $ref: '#/components/schemas/SkuBranchOfficeProjection'
    AttributeResponse:
      type: object
      properties:
        message:
          type: string
        status:
          type: string
          enum:
            - OK
            - ERROR
        data:
          $ref: '#/components/schemas/AttributeProjection'
    ArticleResponse:
      type: object
      properties:
        message:
          type: string
        status:
          type: string
          enum:
            - OK
            - ERROR
        data:
          $ref: '#/components/schemas/ArticleProjection'
    SupplierArticles:
      required:
        - commercialTerm
        - principal
        - supplierId
      type: object
      properties:
        supplierId:
          type: integer
          format: int64
        principal:
          type: boolean
        commercialTerm:
          $ref: '#/components/schemas/CommercialTerm'
        purchaseUnitId:
          type: integer
          format: int64
    SkuResponse:
      type: object
      properties:
        message:
          type: string
        status:
          type: string
          enum:
            - OK
            - ERROR
        data:
          $ref: '#/components/schemas/SkuProjection'
    AttributeValueSkuResponse:
      type: object
      properties:
        message:
          type: string
        status:
          type: string
          enum:
            - OK
            - ERROR
        data:
          type: object
    AttributeValueArticleResponse:
      type: object
      properties:
        message:
          type: string
        status:
          type: string
          enum:
            - OK
            - ERROR
        data:
          $ref: '#/components/schemas/AttributeValueArticleProjection'
    AcceptedPaymentMethod:
      required:
        - name
      type: object
      properties:
        externalId:
          type: string
        name:
          type: string
        typeId:
          type: integer
          format: int64
        feeRangeMin:
          type: integer
          format: int32
        feeRangeMax:
          type: integer
          format: int32
        businessUnitsIds:
          type: array
          items:
            type: integer
            format: int64
    AcceptedPaymentMethodProjectionResponse:
      type: object
      properties:
        message:
          type: string
        status:
          type: string
          enum:
            - OK
            - ERROR
        data:
          $ref: '#/components/schemas/AcceptedPaymentMethodProjection'
    UserAndOrganization:
      type: object
      properties:
        organizationName:
          type: string
        userEmail:
          type: string
    UserAndOrganizationResponse:
      type: object
      properties:
        message:
          type: string
        status:
          type: string
          enum:
            - OK
            - ERROR
        data:
          $ref: '#/components/schemas/UserAndOrganization'
    AddedAndErrorsProccessExcel:
      type: object
      properties:
        added:
          type: integer
          format: int32
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ExcelError'
    ExcelError:
      type: object
      properties:
        sheet:
          type: string
        row:
          type: integer
          format: int32
        column:
          type: integer
          format: int32
        error:
          type: string
          enum:
            - OBLIGATORY_FIELD
            - INCORRECT_TYPE
            - NOT_FOUND
        error_es:
          type: string
        error_en:
          type: string
    ExcelProcessResponse:
      type: object
      properties:
        message:
          type: string
        status:
          type: string
          enum:
            - OK
            - ERROR
        data:
          $ref: '#/components/schemas/AddedAndErrorsProccessExcel'
    Supplier:
      required:
        - name
      type: object
      properties:
        externalId:
          type: string
        name:
          type: string
        website:
          type: string
        catalogueLink:
          type: string
        businessUnitsIds:
          type: array
          items:
            type: integer
            format: int64
        supplierPaymentMethodsIds:
          type: array
          items:
            type: integer
            format: int64
        articles:
          type: array
          items:
            $ref: '#/components/schemas/ArticleSuppliers'
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/SupplierContact'
    SupplierContact:
      type: object
      properties:
        name:
          type: string
        phoneNumber:
          type: string
        email:
          type: string
        role:
          type: string
    CreateRepositionOrder:
      type: object
      properties:
        branchOfficeOrDepositFromId:
          type: integer
          format: int64
        branchOfficeOrDepositFrom:
          type: string
          enum:
            - BRANCH_OFFICE
            - DEPOSIT
        branchOfficeOrDepositToId:
          type: integer
          format: int64
        branchOfficeOrDepositTo:
          type: string
          enum:
            - BRANCH_OFFICE
            - DEPOSIT
        skus:
          type: array
          items:
            $ref: '#/components/schemas/CreateRepositionOrderSku'
        estimatedDeliveryDate:
          type: string
          format: date
    ListRepositionOrderProjectionResponse:
      type: object
      properties:
        message:
          type: string
        status:
          type: string
          enum:
            - OK
            - ERROR
        data:
          type: array
          items:
            $ref: '#/components/schemas/RepositionOrderProjection'
    SkuRepositionOrder:
      type: object
      properties:
        skuId:
          type: integer
          format: int64
        branchOfficeOrDepositFromId:
          type: integer
          format: int64
        branchOfficeOrDepositFrom:
          type: string
          enum:
            - BRANCH_OFFICE
            - DEPOSIT
        branchOfficeOrDepositToId:
          type: integer
          format: int64
        branchOfficeOrDepositTo:
          type: string
          enum:
            - BRANCH_OFFICE
            - DEPOSIT
        quantity:
          type: integer
          format: int32
    MarkReceivedOrderSku:
      type: object
      properties:
        id:
          type: integer
          format: int64
        quantity:
          type: integer
          format: int32
        date:
          type: string
          format: date
        whoReceived:
          type: string
        observations:
          type: string
    ListRepositionOrderSkuProjectionResponse:
      type: object
      properties:
        message:
          type: string
        status:
          type: string
          enum:
            - OK
            - ERROR
        data:
          type: array
          items:
            $ref: '#/components/schemas/RepositionOrderSkuProjection'
    RepositionOrderSkuProjection:
      type: object
      properties:
        id:
          type: integer
          format: int64
        sku:
          $ref: '#/components/schemas/SkuIdNameProjection'
        quantity:
          type: integer
          format: int32
        received:
          type: array
          items:
            $ref: '#/components/schemas/RepositionOrderSkuReceivedProjection'
    RepositionOrderSkuReceivedProjection:
      type: object
      properties:
        id:
          type: integer
          format: int64
        date:
          type: string
          format: date
        quantity:
          type: integer
          format: int32
        whoReceived:
          type: string
        observations:
          type: string
    RepositionOrderIdFromToProjection:
      type: object
      properties:
        id:
          type: integer
          format: int64
        businessUnit:
          $ref: '#/components/schemas/BusinessUnitIdNameProjection'
        branchOfficeFrom:
          $ref: '#/components/schemas/BranchOfficeProjectionIdName'
        depositFrom:
          $ref: '#/components/schemas/DepositProjection'
        branchOfficeTo:
          $ref: '#/components/schemas/BranchOfficeProjectionIdName'
        depositTo:
          $ref: '#/components/schemas/DepositProjection'
        orderStatus:
          $ref: '#/components/schemas/JSONObject'
    RepositionOrderSentProjection:
      type: object
      properties:
        id:
          type: integer
          format: int64
        user:
          $ref: '#/components/schemas/UserSimpleProjection'
        repositionOrderSku:
          $ref: '#/components/schemas/RepositionOrderSkuOrderProjection'
        estimatedDate:
          type: string
          format: date
    RepositionOrderSentProjectionProjectionResponse:
      type: object
      properties:
        message:
          type: string
        status:
          type: string
          enum:
            - OK
            - ERROR
        data:
          type: array
          items:
            $ref: '#/components/schemas/RepositionOrderSentProjection'
    RepositionOrderSkuOrderProjection:
      type: object
      properties:
        id:
          type: integer
          format: int64
        sku:
          $ref: '#/components/schemas/SkuIdNameProjection'
        quantity:
          type: integer
          format: int32
        repositionOrder:
          $ref: '#/components/schemas/RepositionOrderIdFromToProjection'
    UserSimpleProjection:
      type: object
      properties:
        id:
          type: integer
          format: int64
        organizationName:
          type: string
        organizationId:
          type: integer
          format: int64
        email:
          type: string
    DraftRepositionOrderProjection:
      type: object
      properties:
        id:
          type: integer
          format: int64
        businessUnit:
          $ref: '#/components/schemas/BusinessUnitIdNameProjection'
        skuOrders:
          type: array
          items:
            $ref: '#/components/schemas/SkuRepositionOrderProjection'
    DraftRepositionOrderProjectionResponse:
      type: object
      properties:
        message:
          type: string
        status:
          type: string
          enum:
            - OK
            - ERROR
        data:
          $ref: '#/components/schemas/DraftRepositionOrderProjection'
    SkuRepositionOrderProjection:
      type: object
      properties:
        id:
          type: integer
          format: int64
        sku:
          $ref: '#/components/schemas/SkuIdNameProjection'
        quantity:
          type: integer
          format: int32
        branchOfficeFrom:
          $ref: '#/components/schemas/BranchOfficeProjectionIdName'
        depositFrom:
          $ref: '#/components/schemas/DepositIdNameProjection'
        branchOfficeTo:
          $ref: '#/components/schemas/BranchOfficeProjectionIdName'
        depositTo:
          $ref: '#/components/schemas/DepositIdNameProjection'
    SkuPurchaseOrder:
      type: object
      properties:
        skuId:
          type: integer
          format: int64
        supplierId:
          type: integer
          format: int64
        quantity:
          type: integer
          format: int32
        branchOfficeOrDepositId:
          type: integer
          format: int64
        branchOfficeOrDeposit:
          type: string
          enum:
            - BRANCH_OFFICE
            - DEPOSIT
    ListPurchaseOrderProjectionResponse:
      type: object
      properties:
        message:
          type: string
        status:
          type: string
          enum:
            - OK
            - ERROR
        data:
          type: array
          items:
            $ref: '#/components/schemas/PurchaseOrderProjection'
    ListPurchaseOrderSkuProjectionResponse:
      type: object
      properties:
        message:
          type: string
        status:
          type: string
          enum:
            - OK
            - ERROR
        data:
          type: array
          items:
            $ref: '#/components/schemas/PurchaseOrderSkuProjection'
    PurchaseOrderSkuProjection:
      type: object
      properties:
        id:
          type: integer
          format: int64
        sku:
          $ref: '#/components/schemas/SkuIdNameProjection'
        quantity:
          type: integer
          format: int32
        received:
          type: array
          items:
            $ref: '#/components/schemas/PurchaseOrderSkuReceivedProjection'
    PurchaseOrderSkuReceivedProjection:
      type: object
      properties:
        id:
          type: integer
          format: int64
        date:
          type: string
          format: date
        quantity:
          type: integer
          format: int32
        whoReceived:
          type: string
        observations:
          type: string
    CreatePurchaseOrder:
      required:
        - branchOfficeOrDeposit
        - branchOfficeOrDepositId
        - skus
        - supplierId
      type: object
      properties:
        supplierId:
          type: integer
          format: int64
        branchOfficeOrDeposit:
          type: string
          enum:
            - BRANCH_OFFICE
            - DEPOSIT
        branchOfficeOrDepositId:
          type: integer
          format: int64
        skus:
          type: array
          items:
            $ref: '#/components/schemas/CreatePurchaseOrderSku'
        estimatedDeliveryDate:
          type: string
          format: date
    SalePoint:
      type: object
      properties:
        name:
          type: string
        branchOfficeId:
          type: integer
          format: int64
        acceptedPaymentMethodsIds:
          type: array
          items:
            type: integer
            format: int64
    OkResponse:
      type: object
      properties:
        message:
          type: string
        status:
          type: string
          enum:
            - OK
            - ERROR
        data:
          type: object
    Login:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
        organizationName:
          type: string
    LoginResponse:
      type: object
      properties:
        message:
          type: string
        status:
          type: string
          enum:
            - OK
            - ERROR
        data:
          $ref: '#/components/schemas/TokenAndPrivilegesAndBranchOffices'
    PrivilegeIdNameProjection:
      type: object
      properties:
        name:
          type: string
        id:
          type: integer
          format: int64
    TokenAndPrivilegesAndBranchOffices:
      type: object
      properties:
        token:
          type: string
        privileges:
          type: array
          items:
            $ref: '#/components/schemas/PrivilegeIdNameProjection'
        branchOffices:
          type: array
          items:
            $ref: '#/components/schemas/BranchOfficeProjectionIdName'
        superAdmin:
          type: boolean
    LoginSuperAdmin:
      type: object
      properties:
        organizationName:
          type: string
    ApiResponse:
      type: object
      properties:
        message:
          type: string
        status:
          type: string
          enum:
            - OK
            - ERROR
        data:
          type: object
    AttributeValue:
      type: object
      properties:
        attributeId:
          type: integer
          format: int64
        value:
          type: string
        isEnum:
          type: boolean
        attributeEnumId:
          type: integer
          format: int64
    Sku:
      type: object
      properties:
        name:
          type: string
        externalId:
          type: string
        enable:
          type: boolean
        heightWithPackaging:
          type: number
          format: double
        lengthWithPackaging:
          type: number
          format: double
        widthWithPackaging:
          type: number
          format: double
        weightWithPackaging:
          type: number
          format: double
        height:
          type: number
          format: double
        length:
          type: number
          format: double
        width:
          type: number
          format: double
        weight:
          type: number
          format: double
        volumen:
          type: number
          format: double
        kit:
          type: boolean
        salesUnit:
          type: string
        storageUnit:
          type: string
        minimumStock:
          type: integer
          format: int32
        shoeSize:
          type: number
          format: double
        clothSizeOp1:
          type: integer
          format: int32
        clothSizeOp2:
          type: string
        colour:
          type: string
        brand:
          type: string
        flavour:
          type: string
        presentationVolumenM3:
          type: number
          format: double
        presentationTypeOfContainer:
          type: string
        variety:
          type: string
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/AttributeValue'
    SkuWithoutStockProjection:
      type: object
      properties:
        length:
          type: number
          format: double
        name:
          type: string
        id:
          type: integer
          format: int64
        externalId:
          type: string
        enable:
          type: boolean
        heightWithPackaging:
          type: number
          format: double
        lengthWithPackaging:
          type: number
          format: double
        widthWithPackaging:
          type: number
          format: double
        weightWithPackaging:
          type: number
          format: double
        height:
          type: number
          format: double
        width:
          type: number
          format: double
        weight:
          type: number
          format: double
        volumen:
          type: number
          format: double
        kit:
          type: boolean
        salesUnit:
          type: string
        storageUnit:
          type: string
        minimumStock:
          type: integer
          format: int32
        shoeSize:
          type: number
          format: double
        clothSizeOp1:
          type: integer
          format: int32
        clothSizeOp2:
          type: string
        colour:
          type: string
        brand:
          type: string
        flavour:
          type: string
        presentationVolumenM3:
          type: number
          format: double
        presentationTypeOfContainer:
          type: string
        variety:
          type: string
        articleId:
          type: integer
          format: int64
        createdDate:
          type: string
          format: date-time
        attributesWithValue:
          type: array
          items:
            $ref: '#/components/schemas/AttributeValueSkuProjection'
        weightGrs:
          type: number
          format: double
    SkuWithoutStockResponse:
      type: object
      properties:
        message:
          type: string
        status:
          type: string
          enum:
            - OK
            - ERROR
        data:
          $ref: '#/components/schemas/SkuWithoutStockProjection'
    Article:
      required:
        - name
      type: object
      properties:
        externalId:
          type: string
        name:
          type: string
        description:
          type: string
        categoryId:
          type: integer
          format: int64
        brandId:
          type: integer
          format: int64
        cost:
          type: number
          format: double
        defaultPrice:
          type: number
          format: double
        currencyId:
          type: integer
          format: int64
        roundingTypeId:
          type: integer
          format: int64
        enable:
          type: boolean
        skus:
          type: array
          items:
            $ref: '#/components/schemas/Sku'
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/AttributeValue'
        suppliers:
          type: array
          items:
            $ref: '#/components/schemas/SupplierArticles'
        businessUnitsIds:
          type: array
          items:
            type: integer
            format: int64
        discontinued:
          type: boolean
    ArticleProjectionWithoutStock:
      type: object
      properties:
        name:
          type: string
        id:
          type: integer
          format: int64
        currency:
          $ref: '#/components/schemas/CurrencyProjection'
        description:
          type: string
        externalId:
          type: string
        cost:
          type: number
          format: double
        defaultPrice:
          type: number
          format: double
        enable:
          type: boolean
        discontinued:
          type: boolean
        skus:
          type: array
          items:
            $ref: '#/components/schemas/SkuWithoutStockProjection'
        brand:
          $ref: '#/components/schemas/BrandProjection'
        suppliers:
          type: array
          items:
            $ref: '#/components/schemas/ArticleSuppliersProjection'
        category:
          $ref: '#/components/schemas/CategoryProjection'
        prices:
          type: array
          items:
            $ref: '#/components/schemas/ArticlePriceProjection'
        roundingType:
          $ref: '#/components/schemas/RoundingTypeProjection'
        organization:
          $ref: '#/components/schemas/OrganizationProjection'
        attributesWithValue:
          type: array
          items:
            $ref: '#/components/schemas/AttributeValueArticleProjection'
    ArticleProjectionWithoutStockResponse:
      type: object
      properties:
        message:
          type: string
        status:
          type: string
          enum:
            - OK
            - ERROR
        data:
          $ref: '#/components/schemas/ArticleProjectionWithoutStock'
    SortProperty:
      type: object
      properties:
        name:
          type: string
        direction:
          type: string
          enum:
            - ASC
            - DESC
    PageSupplierIdNamePaymentMethodProjection:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/SupplierIdNamePaymentMethodProjection'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/Sort'
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/PageableObject'
        empty:
          type: boolean
    PageSupplierIdNameProjectionResponse:
      type: object
      properties:
        message:
          type: string
        status:
          type: string
          enum:
            - OK
            - ERROR
        data:
          $ref: '#/components/schemas/PageSupplierIdNamePaymentMethodProjection'
    PageableObject:
      type: object
      properties:
        offset:
          type: integer
          format: int64
        sort:
          $ref: '#/components/schemas/Sort'
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        paged:
          type: boolean
        unpaged:
          type: boolean
    Sort:
      type: object
      properties:
        empty:
          type: boolean
        unsorted:
          type: boolean
        sorted:
          type: boolean
    SupplierIdNamePaymentMethodProjection:
      type: object
      properties:
        name:
          type: string
        id:
          type: integer
          format: int64
        externalId:
          type: string
        paymentMethods:
          type: array
          items:
            $ref: '#/components/schemas/SupplierPaymentMethodProjection'
    SupplierIdNameResponse:
      type: object
      properties:
        message:
          type: string
        status:
          type: string
          enum:
            - OK
            - ERROR
        data:
          type: array
          items:
            $ref: '#/components/schemas/SupplierIdNamePaymentMethodProjection'
    ListSupplierPaymentMethodProjectionResponse:
      type: object
      properties:
        message:
          type: string
        status:
          type: string
          enum:
            - OK
            - ERROR
        data:
          type: array
          items:
            $ref: '#/components/schemas/SupplierPaymentMethodProjection'
    PageRepositionOrderProjection:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/RepositionOrderProjection'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/Sort'
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/PageableObject'
        empty:
          type: boolean
    PageRepositionOrderProjectionResponse:
      type: object
      properties:
        message:
          type: string
        status:
          type: string
          enum:
            - OK
            - ERROR
        data:
          $ref: '#/components/schemas/PageRepositionOrderProjection'
    PageSkuStockout:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/SkuStockout'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/Sort'
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/PageableObject'
        empty:
          type: boolean
    PageStockoutResponse:
      type: object
      properties:
        message:
          type: string
        status:
          type: string
          enum:
            - OK
            - ERROR
        data:
          $ref: '#/components/schemas/PageSkuStockout'
    SkuIdNameStockProjection:
      type: object
      properties:
        name:
          type: string
        id:
          type: integer
          format: int64
        externalId:
          type: string
        detailedStock:
          type: object
          properties:
            empty:
              type: boolean
          additionalProperties:
            type: object
        articleId:
          type: integer
          format: int64
        articleName:
          type: string
        totalStock:
          type: integer
          format: int32
        quantityInPurchaseOrders:
          type: integer
          format: int32
        quantityInRepositionOrders:
          type: integer
          format: int32
    SkuStockout:
      type: object
      properties:
        sku:
          $ref: '#/components/schemas/SkuIdNameStockProjection'
        stockoutDate:
          type: string
          format: date
        repositionOrder:
          type: array
          items:
            $ref: '#/components/schemas/RepositionOrderProjection'
    PageRepositionOrderSkuOrderProjection:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/RepositionOrderSkuOrderProjection'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/Sort'
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/PageableObject'
        empty:
          type: boolean
    RepositionOrderSkuOrderProjectionProjectionResponse:
      type: object
      properties:
        message:
          type: string
        status:
          type: string
          enum:
            - OK
            - ERROR
        data:
          $ref: '#/components/schemas/PageRepositionOrderSkuOrderProjection'
    DraftRepositionOrderSavedProjectionResponse:
      type: object
      properties:
        message:
          type: string
        status:
          type: string
          enum:
            - OK
            - ERROR
        data:
          type: array
          items:
            $ref: '#/components/schemas/SkuRepositionOrderDraft'
    SkuRepositionOrderDraft:
      type: object
      properties:
        id:
          type: integer
          format: int64
        skuId:
          type: integer
          format: int64
        skuName:
          type: string
        articleId:
          type: integer
          format: int64
        articleName:
          type: string
        branchOfficeOrDepositFromId:
          type: integer
          format: int64
        branchOfficeOrDepositFromName:
          type: string
        branchOfficeOrDepositFrom:
          type: string
          enum:
            - BRANCH_OFFICE
            - DEPOSIT
        branchOfficeOrDepositToId:
          type: integer
          format: int64
        branchOfficeOrDepositTo:
          type: string
          enum:
            - BRANCH_OFFICE
            - DEPOSIT
        branchOfficeOrDepositToName:
          type: string
        quantity:
          type: integer
          format: int32
    PagePurchaseUnitProjection:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/PurchaseUnitProjection'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/Sort'
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/PageableObject'
        empty:
          type: boolean
    PagePurchaseUnitProjectionResponse:
      type: object
      properties:
        message:
          type: string
        status:
          type: string
          enum:
            - OK
            - ERROR
        data:
          $ref: '#/components/schemas/PagePurchaseUnitProjection'
    ListPurchaseUnitProjectionResponse:
      type: object
      properties:
        message:
          type: string
        status:
          type: string
          enum:
            - OK
            - ERROR
        data:
          type: array
          items:
            $ref: '#/components/schemas/PurchaseUnitProjection'
    PagePurchaseOrderProjection:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/PurchaseOrderProjection'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/Sort'
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/PageableObject'
        empty:
          type: boolean
    PagePurchaseOrderProjectionResponse:
      type: object
      properties:
        message:
          type: string
        status:
          type: string
          enum:
            - OK
            - ERROR
        data:
          $ref: '#/components/schemas/PagePurchaseOrderProjection'
    ListPricingTypeProjectionResponse:
      type: object
      properties:
        message:
          type: string
        status:
          type: string
          enum:
            - OK
            - ERROR
        data:
          type: array
          items:
            $ref: '#/components/schemas/PricingTypeProjection'
    OrganizationProjectionResponse:
      type: object
      properties:
        message:
          type: string
        status:
          type: string
          enum:
            - OK
            - ERROR
        data:
          $ref: '#/components/schemas/OrganizationProjection'
    PageDepositIdNameProjection:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/DepositIdNameProjection'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/Sort'
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/PageableObject'
        empty:
          type: boolean
    PageDepositProjectionIdNameResponse:
      type: object
      properties:
        message:
          type: string
        status:
          type: string
          enum:
            - OK
            - ERROR
        data:
          $ref: '#/components/schemas/PageDepositIdNameProjection'
    ListDepositIdNameProjectionResponse:
      type: object
      properties:
        message:
          type: string
        status:
          type: string
          enum:
            - OK
            - ERROR
        data:
          type: array
          items:
            $ref: '#/components/schemas/DepositIdNameProjection'
    PageClientSegmentOnlyNameProjection:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/ClientSegmentOnlyNameProjection'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/Sort'
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/PageableObject'
        empty:
          type: boolean
    PageClientSegmentOnlyNameProjectionResponse:
      type: object
      properties:
        message:
          type: string
        status:
          type: string
          enum:
            - OK
            - ERROR
        data:
          $ref: '#/components/schemas/PageClientSegmentOnlyNameProjection'
    ListClientSegmentProjectionResponse:
      type: object
      properties:
        message:
          type: string
        status:
          type: string
          enum:
            - OK
            - ERROR
        data:
          type: array
          items:
            $ref: '#/components/schemas/ClientSegmentProjection'
    IntegerResponse:
      type: object
      properties:
        message:
          type: string
        status:
          type: string
          enum:
            - OK
            - ERROR
        data:
          type: integer
          format: int32
    ListClientProjectionResponse:
      type: object
      properties:
        message:
          type: string
        status:
          type: string
          enum:
            - OK
            - ERROR
        data:
          type: array
          items:
            $ref: '#/components/schemas/ClientProjection'
    PageClientProjection:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/ClientProjection'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/Sort'
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/PageableObject'
        empty:
          type: boolean
    PageClientProjectionResponse:
      type: object
      properties:
        message:
          type: string
        status:
          type: string
          enum:
            - OK
            - ERROR
        data:
          $ref: '#/components/schemas/PageClientProjection'
    PageCategoryIdAndNameProjection:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/CategoryIdAndNameProjection'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/Sort'
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/PageableObject'
        empty:
          type: boolean
    PageCategoryIdNameProjectionResponse:
      type: object
      properties:
        message:
          type: string
        status:
          type: string
          enum:
            - OK
            - ERROR
        data:
          $ref: '#/components/schemas/PageCategoryIdAndNameProjection'
    ListCategoryResponse:
      type: object
      properties:
        message:
          type: string
        status:
          type: string
          enum:
            - OK
            - ERROR
        data:
          type: array
          items:
            $ref: '#/components/schemas/CategoryProjection'
    BusinessUnitProjection:
      type: object
      properties:
        name:
          type: string
        id:
          type: integer
          format: int64
        language:
          $ref: '#/components/schemas/LanguageProjection'
        branchOffices:
          type: array
          items:
            $ref: '#/components/schemas/BranchOfficeProjectionIdName'
        defaultCurrency:
          $ref: '#/components/schemas/CurrencyProjection'
        organization:
          $ref: '#/components/schemas/OrganizationProjection'
        channels:
          type: array
          items:
            $ref: '#/components/schemas/ChannelProjection'
    BusinessUnitProjectionResponse:
      type: object
      properties:
        message:
          type: string
        status:
          type: string
          enum:
            - OK
            - ERROR
        data:
          $ref: '#/components/schemas/BusinessUnitProjection'
    ChannelProjection:
      type: object
      properties:
        id:
          type: integer
          format: int64
        type:
          $ref: '#/components/schemas/ChannelTypeProjection'
        currencies:
          type: array
          items:
            $ref: '#/components/schemas/CurrencyProjection'
    LanguageProjection:
      type: object
      properties:
        name:
          type: string
        id:
          type: integer
          format: int64
        shortName:
          type: string
    BusinessUnitChannelProjection:
      type: object
      properties:
        name:
          type: string
        id:
          type: integer
          format: int64
        branchOffices:
          type: array
          items:
            $ref: '#/components/schemas/BranchOfficeProjection'
        channels:
          type: array
          items:
            $ref: '#/components/schemas/ChannelIdTypeProjection'
    ChannelIdTypeProjection:
      type: object
      properties:
        id:
          type: integer
          format: int64
        type:
          $ref: '#/components/schemas/ChannelTypeProjection'
    ListBusinessUnitChannelProjectionResponse:
      type: object
      properties:
        message:
          type: string
        status:
          type: string
          enum:
            - OK
            - ERROR
        data:
          type: array
          items:
            $ref: '#/components/schemas/BusinessUnitChannelProjection'
    PageBrandProjection:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/BrandProjection'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/Sort'
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/PageableObject'
        empty:
          type: boolean
    PageBrandProjectionResponse:
      type: object
      properties:
        message:
          type: string
        status:
          type: string
          enum:
            - OK
            - ERROR
        data:
          $ref: '#/components/schemas/PageBrandProjection'
    ListBrandProjectionResponse:
      type: object
      properties:
        message:
          type: string
        status:
          type: string
          enum:
            - OK
            - ERROR
        data:
          type: array
          items:
            $ref: '#/components/schemas/BrandProjection'
    PageBranchOfficeProjectionIdName:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/BranchOfficeProjectionIdName'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/Sort'
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/PageableObject'
        empty:
          type: boolean
    PageBranchOfficeProjectionIdNameResponse:
      type: object
      properties:
        message:
          type: string
        status:
          type: string
          enum:
            - OK
            - ERROR
        data:
          $ref: '#/components/schemas/PageBranchOfficeProjectionIdName'
    BranchOfficeByBusinessUnit:
      type: object
      properties:
        businessUnit:
          $ref: '#/components/schemas/BusinessUnitIdNameProjection'
        branchOffices:
          type: array
          items:
            $ref: '#/components/schemas/BranchOfficeProjectionIdName'
    BranchOfficeByBusinessUnitResponse:
      type: object
      properties:
        message:
          type: string
        status:
          type: string
          enum:
            - OK
            - ERROR
        data:
          type: array
          items:
            $ref: '#/components/schemas/BranchOfficeByBusinessUnit'
    ConfirmationTokenAndPassword:
      type: object
      properties:
        existsToken:
          type: boolean
        needToSetupPassword:
          type: boolean
    ConfirmationTokenAndSetupPasswordResponse:
      type: object
      properties:
        message:
          type: string
        status:
          type: string
          enum:
            - OK
            - ERROR
        data:
          $ref: '#/components/schemas/ConfirmationTokenAndPassword'
    PageAttributeProjection:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/AttributeProjection'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/Sort'
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/PageableObject'
        empty:
          type: boolean
    PageAttributeProjectionResponse:
      type: object
      properties:
        message:
          type: string
        status:
          type: string
          enum:
            - OK
            - ERROR
        data:
          $ref: '#/components/schemas/PageAttributeProjection'
    ListAttributesResponse:
      type: object
      properties:
        message:
          type: string
        status:
          type: string
          enum:
            - OK
            - ERROR
        data:
          type: array
          items:
            $ref: '#/components/schemas/AttributeProjection'
    PageArticleIdNameProjection:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/ArticleIdNameProjection'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/Sort'
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/PageableObject'
        empty:
          type: boolean
    PageArticleIdNameProjectionResponse:
      type: object
      properties:
        message:
          type: string
        status:
          type: string
          enum:
            - OK
            - ERROR
        data:
          $ref: '#/components/schemas/PageArticleIdNameProjection'
    PageSkuIdNameProjection:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/SkuIdNameProjection'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/Sort'
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/PageableObject'
        empty:
          type: boolean
    PageSkuIdNameProjectionResponse:
      type: object
      properties:
        message:
          type: string
        status:
          type: string
          enum:
            - OK
            - ERROR
        data:
          $ref: '#/components/schemas/PageSkuIdNameProjection'
    PageSkuIdNameStockBranchOffice:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/SkuIdNameStockBranchOffice'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/Sort'
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/PageableObject'
        empty:
          type: boolean
    PageSkuIdNameStockBranchOfficeResponse:
      type: object
      properties:
        message:
          type: string
        status:
          type: string
          enum:
            - OK
            - ERROR
        data:
          $ref: '#/components/schemas/PageSkuIdNameStockBranchOffice'
    SkuIdNameStockBranchOffice:
      type: object
      properties:
        id:
          type: integer
          format: int64
        articleId:
          type: integer
          format: int64
        articleName:
          type: string
        name:
          type: string
        totalStock:
          type: integer
          format: int32
        quantityInPurchaseOrders:
          type: integer
          format: int32
        detailedStock:
          type: object
          properties:
            empty:
              type: boolean
          additionalProperties:
            type: object
        stockInBranchOffice:
          type: integer
          format: int32
        stockInOrders:
          type: integer
          format: int32
    ArticleIdNameResponse:
      type: object
      properties:
        message:
          type: string
        status:
          type: string
          enum:
            - OK
            - ERROR
        data:
          type: object
    ArticleIdNameStockProjection:
      type: object
      properties:
        name:
          type: string
        id:
          type: integer
          format: int64
        externalId:
          type: string
        discontinued:
          type: boolean
        skus:
          type: array
          items:
            $ref: '#/components/schemas/SkuIdNameStockProjection'
        suppliers:
          type: array
          items:
            $ref: '#/components/schemas/ArticleSuppliersProjection'
        quantityInPurchaseOrder:
          type: integer
          format: int32
        totalStockArticles:
          type: integer
          format: int32
    ListArticleIdNameStockProjectionResponse:
      type: object
      properties:
        message:
          type: string
        status:
          type: string
          enum:
            - OK
            - ERROR
        data:
          type: array
          items:
            $ref: '#/components/schemas/ArticleIdNameStockProjection'
    PageArticleIdNameStockProjection:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/ArticleIdNameStockProjection'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/Sort'
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/PageableObject'
        empty:
          type: boolean
    PageArticleIdNameStockProjectionResponse:
      type: object
      properties:
        message:
          type: string
        status:
          type: string
          enum:
            - OK
            - ERROR
        data:
          $ref: '#/components/schemas/PageArticleIdNameStockProjection'
    ArticleIdNameSkuWithStocksProjection:
      type: object
      properties:
        name:
          type: string
        id:
          type: integer
          format: int64
        externalId:
          type: string
        skus:
          type: array
          items:
            $ref: '#/components/schemas/SkuIdNameStockProjection'
        suppliers:
          type: array
          items:
            $ref: '#/components/schemas/ArticleSuppliersProjection'
        quantityInPurchaseOrder:
          type: integer
          format: int32
        totalStockArticles:
          type: integer
          format: int32
    PageArticleIdNameSkuWithStocksProjection:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/ArticleIdNameSkuWithStocksProjection'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/Sort'
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/PageableObject'
        empty:
          type: boolean
    PageArticleIdNameSkuWithStocksProjectionResponse:
      type: object
      properties:
        message:
          type: string
        status:
          type: string
          enum:
            - OK
            - ERROR
        data:
          $ref: '#/components/schemas/PageArticleIdNameSkuWithStocksProjection'
    ArticleIdNameSkusProjection:
      type: object
      properties:
        name:
          type: string
        id:
          type: integer
          format: int64
        externalId:
          type: string
        skus:
          type: array
          properties:
            empty:
              type: boolean
          items:
            type: object
    ListArticleIdNameSkusProjectionResponse:
      type: object
      properties:
        message:
          type: string
        status:
          type: string
          enum:
            - OK
            - ERROR
        data:
          type: array
          items:
            $ref: '#/components/schemas/ArticleIdNameSkusProjection'
    ListAcceptedPaymentMethodTypeResponse:
      type: object
      properties:
        message:
          type: string
        status:
          type: string
          enum:
            - OK
            - ERROR
        data:
          type: array
          items:
            $ref: '#/components/schemas/AcceptedPaymentMethodTypeEntity'
    PageAcceptedPaymentMethodProjection:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/AcceptedPaymentMethodProjection'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/Sort'
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/PageableObject'
        empty:
          type: boolean
    PageAcceptedPaymentMethodProjectionResponse:
      type: object
      properties:
        message:
          type: string
        status:
          type: string
          enum:
            - OK
            - ERROR
        data:
          $ref: '#/components/schemas/PageAcceptedPaymentMethodProjection'
    ListAcceptedPaymentMethodProjectionResponse:
      type: object
      properties:
        message:
          type: string
        status:
          type: string
          enum:
            - OK
            - ERROR
        data:
          type: array
          items:
            $ref: '#/components/schemas/AcceptedPaymentMethodProjection'
    ConfirmationTokenEntity:
      type: object
      properties:
        id:
          type: integer
          format: int64
        confirmationToken:
          type: string
        createdDate:
          type: string
          format: date-time
        user:
          $ref: '#/components/schemas/UserEntity'
    PasswordResetTokenEntity:
      type: object
      properties:
        id:
          type: integer
          format: int64
        passwordResetToken:
          type: string
        createdDate:
          type: string
          format: date-time
        user:
          $ref: '#/components/schemas/UserEntity'
    PrivilegeEntity:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        descriptionEs:
          type: string
        descriptionEn:
          type: string
        roles:
          type: array
          items:
            $ref: '#/components/schemas/RoleEntity'
    RoleEntity:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        users:
          type: array
          items:
            $ref: '#/components/schemas/UserEntity'
        privileges:
          type: array
          items:
            $ref: '#/components/schemas/PrivilegeEntity'
        description:
          type: string
        organization:
          $ref: '#/components/schemas/OrganizationEntity'
        organizationName:
          type: string
    UserEntity:
      type: object
      properties:
        id:
          type: integer
          format: int64
        email:
          type: string
        organization:
          $ref: '#/components/schemas/OrganizationEntity'
        enabled:
          type: boolean
        roles:
          type: array
          items:
            $ref: '#/components/schemas/RoleEntity'
        confirmationTokenEntity:
          $ref: '#/components/schemas/ConfirmationTokenEntity'
        passwordResetTokenEntity:
          $ref: '#/components/schemas/PasswordResetTokenEntity'
        businessUnits:
          type: array
          items:
            $ref: '#/components/schemas/BusinessUnitEntity'
        branchOffices:
          type: array
          items:
            $ref: '#/components/schemas/BranchOfficeEntity'
        organizationName:
          type: string
        organizationId:
          type: integer
          format: int64
    BuyOneGetOnePromotionEntity:
      type: object
      properties:
        id:
          type: integer
          format: int64
        type:
          type: string
          enum:
            - GIFT
            - FREE_SHIPPING
            - MAX_PRICE_PER_ARTICLE
        gift:
          $ref: '#/components/schemas/SkuEntity'
        skus:
          type: array
          items:
            $ref: '#/components/schemas/SkuEntity'
        promotion:
          $ref: '#/components/schemas/PromotionEntity'
        bogopromotionType:
          type: object
          properties:
            empty:
              type: boolean
          additionalProperties:
            type: object
    BuyTogetherPromotionEntity:
      type: object
      properties:
        id:
          type: integer
          format: int64
        discountFirstList:
          type: number
          format: double
        discountSecondList:
          type: number
          format: double
        firstList:
          type: array
          items:
            $ref: '#/components/schemas/SkuEntity'
        secondList:
          type: array
          items:
            $ref: '#/components/schemas/SkuEntity'
        promotion:
          $ref: '#/components/schemas/PromotionEntity'
    ClientSegmentEntity:
      type: object
      properties:
        id:
          type: integer
          format: int64
        organization:
          $ref: '#/components/schemas/OrganizationEntity'
        name:
          type: string
        description:
          type: string
        type:
          type: string
          enum:
            - MANUAL
            - AUTO
        minAge:
          type: integer
          format: int32
        maxAge:
          type: integer
          format: int32
        sex:
          type: string
          enum:
            - MALE
            - FEMALE
        countries:
          type: array
          items:
            $ref: '#/components/schemas/CountryEntity'
        states:
          type: array
          items:
            $ref: '#/components/schemas/StateEntity'
        articles:
          type: array
          items:
            $ref: '#/components/schemas/ArticleEntity'
        brands:
          type: array
          items:
            $ref: '#/components/schemas/BrandEntity'
        categories:
          type: array
          items:
            $ref: '#/components/schemas/CategoryEntity'
        branchOffices:
          type: array
          items:
            $ref: '#/components/schemas/BranchOfficeEntity'
        sexType:
          type: object
          properties:
            empty:
              type: boolean
          additionalProperties:
            type: object
        clientSegmentType:
          type: object
          properties:
            empty:
              type: boolean
          additionalProperties:
            type: object
    CountryEntity:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        iso3:
          type: string
        iso2:
          type: string
        emoji:
          type: string
        states:
          type: array
          items:
            $ref: '#/components/schemas/StateEntity'
    MxnPromotionEntity:
      type: object
      properties:
        id:
          type: integer
          format: int64
        quantityForPromotion:
          type: integer
          format: int32
        quantityWithDiscount:
          type: integer
          format: int32
        discountPercent:
          type: number
          format: double
        allProducts:
          type: boolean
        highPrice:
          type: boolean
        forTotalArticles:
          type: boolean
        skus:
          type: array
          items:
            $ref: '#/components/schemas/SkuEntity'
        promotion:
          $ref: '#/components/schemas/PromotionEntity'
    ProgressiveDiscountPromotionEntity:
      type: object
      properties:
        id:
          type: integer
          format: int64
        skus:
          type: array
          items:
            $ref: '#/components/schemas/SkuEntity'
        lines:
          type: array
          items:
            $ref: '#/components/schemas/ProgressiveDiscountPromotionLineEntity'
        promotion:
          $ref: '#/components/schemas/PromotionEntity'
    ProgressiveDiscountPromotionLineEntity:
      type: object
      properties:
        id:
          type: integer
          format: int64
        quantity:
          type: integer
          format: int32
        discount:
          type: number
          format: double
        progressiveDiscountPromotion:
          $ref: '#/components/schemas/ProgressiveDiscountPromotionEntity'
    PromotionBinEntity:
      type: object
      properties:
        id:
          type: integer
          format: int64
        promotion:
          $ref: '#/components/schemas/PromotionEntity'
        bin:
          type: integer
          format: int32
    PromotionEntity:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        status:
          type: string
          enum:
            - CREATED
            - SUGGESTED
            - SCHEDULED
            - IN_ACTION
            - CANCEL
            - REJECTED
            - FINISHED
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        startDay:
          type: string
          format: date
        endDay:
          type: string
          format: date
        recurrence:
          $ref: '#/components/schemas/RecurrenceEntity'
        origin:
          type: string
          enum:
            - MANUAL
            - SUGGESTED
        type:
          type: string
          enum:
            - REGULAR
            - BUY_TOGETHER
            - MxN
            - PROGRESSIVE_DISCOUNT
            - BOGO
        clientSegments:
          type: array
          items:
            $ref: '#/components/schemas/ClientSegmentEntity'
        brands:
          type: array
          items:
            $ref: '#/components/schemas/BrandEntity'
        categories:
          type: array
          items:
            $ref: '#/components/schemas/CategoryEntity'
        acceptedPaymentMethods:
          type: array
          items:
            $ref: '#/components/schemas/AcceptedPaymentMethodEntity'
        branchOffices:
          type: array
          items:
            $ref: '#/components/schemas/BranchOfficeEntity'
        regularPromotion:
          $ref: '#/components/schemas/RegularPromotionEntity'
        buyTogetherPromotion:
          $ref: '#/components/schemas/BuyTogetherPromotionEntity'
        mxnPromotion:
          $ref: '#/components/schemas/MxnPromotionEntity'
        progressiveDiscountPromotion:
          $ref: '#/components/schemas/ProgressiveDiscountPromotionEntity'
        buyOneGetOnePromotion:
          $ref: '#/components/schemas/BuyOneGetOnePromotionEntity'
        quantityApplications:
          type: integer
          format: int32
        quantityPerBranchOffice:
          type: integer
          format: int32
        quantityPerClient:
          type: integer
          format: int32
        quantityPerArticle:
          type: integer
          format: int32
        accumulateOtherPromotions:
          type: boolean
        minimumTicket:
          type: number
          format: double
        maximumTicket:
          type: number
          format: double
        distributeLines:
          type: boolean
        binRangeMax:
          type: integer
          format: int32
        binRangeMin:
          type: integer
          format: int32
        bines:
          type: array
          items:
            $ref: '#/components/schemas/PromotionBinEntity'
        organization:
          $ref: '#/components/schemas/OrganizationEntity'
        promotionType:
          type: object
          properties:
            empty:
              type: boolean
          additionalProperties:
            type: object
        promotionStatus:
          type: object
          properties:
            empty:
              type: boolean
          additionalProperties:
            type: object
        promotionOrigin:
          type: object
          properties:
            empty:
              type: boolean
          additionalProperties:
            type: object
    RecurrenceEntity:
      type: object
      properties:
        id:
          type: integer
          format: int64
        type:
          type: string
          enum:
            - WEEKLY
            - MONTHLY
            - ANUALLY
        monday:
          type: boolean
        tuesday:
          type: boolean
        wednesday:
          type: boolean
        thursday:
          type: boolean
        friday:
          type: boolean
        saturday:
          type: boolean
        sunday:
          type: boolean
        dayMonthly:
          maximum: 31
          minimum: 1
          type: integer
          format: int32
        dayAnually:
          type: string
          format: date
        startTime:
          $ref: '#/components/schemas/LocalTime'
        endTime:
          $ref: '#/components/schemas/LocalTime'
        repeatInterval:
          type: integer
          format: int32
        promotion:
          $ref: '#/components/schemas/PromotionEntity'
        recurrenceType:
          type: object
          properties:
            empty:
              type: boolean
          additionalProperties:
            type: object
    RegularPromotionEntity:
      type: object
      properties:
        id:
          type: integer
          format: int64
        type:
          type: string
          enum:
            - NOMINAL
            - NOMINAL_SENT
            - PERCENTAGE
            - MAX_PRICE_PER_ARTICLE
            - PERCENTAGE_SENT
            - FREE_SHIPPING
            - GIFT
            - NOMINAL_DISCOUNT
            - PRICE_TABLE
        discountValue:
          type: number
          format: double
        discountPercent:
          type: number
          format: double
        gift:
          $ref: '#/components/schemas/SkuEntity'
        skus:
          type: array
          items:
            $ref: '#/components/schemas/SkuEntity'
        promotion:
          $ref: '#/components/schemas/PromotionEntity'
        regularPromotionType:
          type: object
          properties:
            empty:
              type: boolean
          additionalProperties:
            type: object
    StateEntity:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        country:
          $ref: '#/components/schemas/CountryEntity'
        countryCode:
          type: string
    TicketEntity:
      type: object
      properties:
        id:
          type: integer
          format: int64
        code:
          type: integer
          format: int32
        clientRut:
          type: integer
          format: int32
        date:
          type: string
          format: date
        subtotal:
          type: number
          format: double
        iva:
          type: number
          format: double
        total:
          type: number
          format: double
        documentType:
          type: string
          enum:
            - CASH_TICKET
            - CREDIT_INVOICE
            - CREDIT_NOTE
        accumulatePoints:
          type: number
          format: double
        consumedPoints:
          type: number
          format: double
        currency:
          $ref: '#/components/schemas/CurrencyEntity'
        channel:
          $ref: '#/components/schemas/ChannelEntity'
        salePoint:
          $ref: '#/components/schemas/SalePointEntity'
        skusWithUnitPrice:
          type: array
          items:
            $ref: '#/components/schemas/TicketSkuEntity'
        acceptedPaymentMethods:
          type: array
          items:
            $ref: '#/components/schemas/AcceptedPaymentMethodEntity'
        fidelity:
          type: string
        promotions:
          type: array
          items:
            $ref: '#/components/schemas/PromotionEntity'
        organization:
          $ref: '#/components/schemas/OrganizationEntity'
        ticketDocumentType:
          type: object
          properties:
            empty:
              type: boolean
          additionalProperties:
            type: object
    TicketSkuEntity:
      type: object
      properties:
        id:
          type: integer
          format: int64
        ticket:
          $ref: '#/components/schemas/TicketEntity'
        sku:
          $ref: '#/components/schemas/SkuEntity'
        unitPrice:
          type: number
          format: double
        quantity:
          type: integer
          format: int32
  securitySchemes:
    Bearer Authentication:
      type: http
      scheme: bearer
      bearerFormat: JWT
